//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DocumentsTranslater.GlobalSight {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AmbassadorWebServiceSoapBinding", Namespace="http://www.globalsight.com/webservices/")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(WebServiceException))]
    public partial class AmbassadorService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchEntries1OperationCompleted;
        
        private System.Threading.SendOrPostCallback searchEntries2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelJobByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTasksInJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTasksInJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback passDCTMAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGSVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSegmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSegment1OperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSegment2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTermbasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveTBEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTBEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTBEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTBEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFirstTuOperationCompleted;
        
        private System.Threading.SendOrPostCallback nextTusOperationCompleted;
        
        private System.Threading.SendOrPostCallback nextTus1OperationCompleted;
        
        private System.Threading.SendOrPostCallback editTuOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTu1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourceLocalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPriorityByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchCompanyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchJobsByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchJobsByStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommentFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadTmxFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback importTmxFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback jobsSkipActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback taskReassignOperationCompleted;
        
        private System.Threading.SendOrPostCallback jobsAddLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback createJobGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback addJobToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportTMOperationCompleted;
        
        private System.Threading.SendOrPostCallback tmFullTextSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountsByJobStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback archiveJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadFile1OperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadFile2OperationCompleted;
        
        private System.Threading.SendOrPostCallback helloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback createJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback createJob1OperationCompleted;
        
        private System.Threading.SendOrPostCallback createJob2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getTargetLocalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFileProfileInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllActivityTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllLocalePairsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProjectsByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback createJobOnInitialOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadFileForInitialOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobAndWorkflowInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback acceptTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback rejectTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback createUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addJobCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback isSupportCurrentLocalePairOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadOriginalSourceFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSegmentCommentBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadEditionFileBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback importOfflineTargetFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobExportFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback isInstalledOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTaskStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobExportWorkflowFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocalizedDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocalizedDocuments1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocalizedDocuments_oldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImportExportStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAcceptedTasksInWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentTasksInWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserUnavailabilityReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFileProfileInfoExOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDocumentumJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelDocumentumJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDownloadableJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchEntriesInBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPermissionsByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttributesByJobIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttributesByJobId1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttributesByProjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectIdByFileProfileIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectIdByFileProfileId1OperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadAttributeFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadCommentReferenceFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback importOfflineKitFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOfflineFileUploadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback isExistedPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchJobIdsPerCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchJobsByCreatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchJobsPerCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchJobsPerCompany1OperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchJobsPerCompany2OperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchWorkflowRelevantInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchWorkflowRelevantInfoByJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchFileForPreviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback jobsWorkflowCanBeAddedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobsByTimeRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobsByTimeRange1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllL10NProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback downloadXliffOfflineFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback downloadXliffOfflineFile1OperationCompleted;
        
        private System.Threading.SendOrPostCallback generateTranslationEditReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePostReviewQAReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateCharacterCountReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateReviewersCommentReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateDITAQAReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateQAChecksReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateQAChecksReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkOfflineFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadWorkOfflineFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback importWorkOfflineFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTmExportStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInContextReviewLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback editEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback editEntry1OperationCompleted;
        
        private System.Threading.SendOrPostCallback editEntry2OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveEntry1OperationCompleted;
        
        private System.Threading.SendOrPostCallback saveEntry2OperationCompleted;
        
        private System.Threading.SendOrPostCallback discardJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback dispatchWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback completeTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTMProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXliffFileProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setJobAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUniqueJobNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUniqueJobName1OperationCompleted;
        
        private System.Threading.SendOrPostCallback createEditionJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserTimeZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProjectTMsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateReviewersCommentSimplifiedReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsernameFromSessionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AmbassadorService() {
            this.Url = global::DocumentsTranslater.Properties.Settings.Default.DocumentsTranslater_GlobalSight_AmbassadorService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        public event searchEntriesCompletedEventHandler searchEntriesCompleted;
        
        /// <remarks/>
        public event searchEntries1CompletedEventHandler searchEntries1Completed;
        
        /// <remarks/>
        public event searchEntries2CompletedEventHandler searchEntries2Completed;
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event getConnectionCompletedEventHandler getConnectionCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event addCommentCompletedEventHandler addCommentCompleted;
        
        /// <remarks/>
        public event getAllUsersCompletedEventHandler getAllUsersCompleted;
        
        /// <remarks/>
        public event getStatusCompletedEventHandler getStatusCompleted;
        
        /// <remarks/>
        public event getJobStatusCompletedEventHandler getJobStatusCompleted;
        
        /// <remarks/>
        public event cancelJobByIdCompletedEventHandler cancelJobByIdCompleted;
        
        /// <remarks/>
        public event cancelJobsCompletedEventHandler cancelJobsCompleted;
        
        /// <remarks/>
        public event exportWorkflowCompletedEventHandler exportWorkflowCompleted;
        
        /// <remarks/>
        public event exportJobCompletedEventHandler exportJobCompleted;
        
        /// <remarks/>
        public event getTasksInJobCompletedEventHandler getTasksInJobCompleted;
        
        /// <remarks/>
        public event getTasksInJobsCompletedEventHandler getTasksInJobsCompleted;
        
        /// <remarks/>
        public event passDCTMAccountCompletedEventHandler passDCTMAccountCompleted;
        
        /// <remarks/>
        public event getGSVersionCompletedEventHandler getGSVersionCompleted;
        
        /// <remarks/>
        public event deleteSegmentCompletedEventHandler deleteSegmentCompleted;
        
        /// <remarks/>
        public event deleteSegment1CompletedEventHandler deleteSegment1Completed;
        
        /// <remarks/>
        public event deleteSegment2CompletedEventHandler deleteSegment2Completed;
        
        /// <remarks/>
        public event getAllTermbasesCompletedEventHandler getAllTermbasesCompleted;
        
        /// <remarks/>
        public event saveTBEntryCompletedEventHandler saveTBEntryCompleted;
        
        /// <remarks/>
        public event searchTBEntriesCompletedEventHandler searchTBEntriesCompleted;
        
        /// <remarks/>
        public event editTBEntryCompletedEventHandler editTBEntryCompleted;
        
        /// <remarks/>
        public event deleteTBEntryCompletedEventHandler deleteTBEntryCompleted;
        
        /// <remarks/>
        public event getFirstTuCompletedEventHandler getFirstTuCompleted;
        
        /// <remarks/>
        public event nextTusCompletedEventHandler nextTusCompleted;
        
        /// <remarks/>
        public event nextTus1CompletedEventHandler nextTus1Completed;
        
        /// <remarks/>
        public event editTuCompletedEventHandler editTuCompleted;
        
        /// <remarks/>
        public event editTu1CompletedEventHandler editTu1Completed;
        
        /// <remarks/>
        public event getSourceLocalesCompletedEventHandler getSourceLocalesCompleted;
        
        /// <remarks/>
        public event getPriorityByIDCompletedEventHandler getPriorityByIDCompleted;
        
        /// <remarks/>
        public event fetchCompanyInfoCompletedEventHandler fetchCompanyInfoCompleted;
        
        /// <remarks/>
        public event fetchJobsByRangeCompletedEventHandler fetchJobsByRangeCompleted;
        
        /// <remarks/>
        public event fetchJobsByStateCompletedEventHandler fetchJobsByStateCompleted;
        
        /// <remarks/>
        public event getCommentFilesCompletedEventHandler getCommentFilesCompleted;
        
        /// <remarks/>
        public event uploadTmxFileCompletedEventHandler uploadTmxFileCompleted;
        
        /// <remarks/>
        public event importTmxFileCompletedEventHandler importTmxFileCompleted;
        
        /// <remarks/>
        public event jobsSkipActivityCompletedEventHandler jobsSkipActivityCompleted;
        
        /// <remarks/>
        public event taskReassignCompletedEventHandler taskReassignCompleted;
        
        /// <remarks/>
        public event jobsAddLanguagesCompletedEventHandler jobsAddLanguagesCompleted;
        
        /// <remarks/>
        public event getWorkflowPathCompletedEventHandler getWorkflowPathCompleted;
        
        /// <remarks/>
        public event createJobGroupCompletedEventHandler createJobGroupCompleted;
        
        /// <remarks/>
        public event addJobToGroupCompletedEventHandler addJobToGroupCompleted;
        
        /// <remarks/>
        public event exportTMCompletedEventHandler exportTMCompleted;
        
        /// <remarks/>
        public event tmFullTextSearchCompletedEventHandler tmFullTextSearchCompleted;
        
        /// <remarks/>
        public event getCountsByJobStateCompletedEventHandler getCountsByJobStateCompleted;
        
        /// <remarks/>
        public event getServerVersionCompletedEventHandler getServerVersionCompleted;
        
        /// <remarks/>
        public event cancelJobCompletedEventHandler cancelJobCompleted;
        
        /// <remarks/>
        public event archiveJobCompletedEventHandler archiveJobCompleted;
        
        /// <remarks/>
        public event uploadFileCompletedEventHandler uploadFileCompleted;
        
        /// <remarks/>
        public event uploadFile1CompletedEventHandler uploadFile1Completed;
        
        /// <remarks/>
        public event uploadFile2CompletedEventHandler uploadFile2Completed;
        
        /// <remarks/>
        public event helloWorldCompletedEventHandler helloWorldCompleted;
        
        /// <remarks/>
        public event createJobCompletedEventHandler createJobCompleted;
        
        /// <remarks/>
        public event createJob1CompletedEventHandler createJob1Completed;
        
        /// <remarks/>
        public event createJob2CompletedEventHandler createJob2Completed;
        
        /// <remarks/>
        public event getTargetLocalesCompletedEventHandler getTargetLocalesCompleted;
        
        /// <remarks/>
        public event getFileProfileInformationCompletedEventHandler getFileProfileInformationCompleted;
        
        /// <remarks/>
        public event getAllActivityTypesCompletedEventHandler getAllActivityTypesCompleted;
        
        /// <remarks/>
        public event getAllLocalePairsCompletedEventHandler getAllLocalePairsCompleted;
        
        /// <remarks/>
        public event getAllProjectsByUserCompletedEventHandler getAllProjectsByUserCompleted;
        
        /// <remarks/>
        public event createJobOnInitialCompletedEventHandler createJobOnInitialCompleted;
        
        /// <remarks/>
        public event uploadFileForInitialCompletedEventHandler uploadFileForInitialCompleted;
        
        /// <remarks/>
        public event getJobAndWorkflowInfoCompletedEventHandler getJobAndWorkflowInfoCompleted;
        
        /// <remarks/>
        public event acceptTaskCompletedEventHandler acceptTaskCompleted;
        
        /// <remarks/>
        public event rejectTaskCompletedEventHandler rejectTaskCompleted;
        
        /// <remarks/>
        public event createUserCompletedEventHandler createUserCompleted;
        
        /// <remarks/>
        public event modifyUserCompletedEventHandler modifyUserCompleted;
        
        /// <remarks/>
        public event addJobCommentCompletedEventHandler addJobCommentCompleted;
        
        /// <remarks/>
        public event isSupportCurrentLocalePairCompletedEventHandler isSupportCurrentLocalePairCompleted;
        
        /// <remarks/>
        public event uploadOriginalSourceFileCompletedEventHandler uploadOriginalSourceFileCompleted;
        
        /// <remarks/>
        public event sendSegmentCommentBackCompletedEventHandler sendSegmentCommentBackCompleted;
        
        /// <remarks/>
        public event uploadEditionFileBackCompletedEventHandler uploadEditionFileBackCompleted;
        
        /// <remarks/>
        public event importOfflineTargetFilesCompletedEventHandler importOfflineTargetFilesCompleted;
        
        /// <remarks/>
        public event getJobExportFilesCompletedEventHandler getJobExportFilesCompleted;
        
        /// <remarks/>
        public event cancelWorkflowCompletedEventHandler cancelWorkflowCompleted;
        
        /// <remarks/>
        public event isInstalledCompletedEventHandler isInstalledCompleted;
        
        /// <remarks/>
        public event updateTaskStateCompletedEventHandler updateTaskStateCompleted;
        
        /// <remarks/>
        public event getJobExportWorkflowFilesCompletedEventHandler getJobExportWorkflowFilesCompleted;
        
        /// <remarks/>
        public event getLocalizedDocumentsCompletedEventHandler getLocalizedDocumentsCompleted;
        
        /// <remarks/>
        public event getLocalizedDocuments1CompletedEventHandler getLocalizedDocuments1Completed;
        
        /// <remarks/>
        public event getLocalizedDocuments_oldCompletedEventHandler getLocalizedDocuments_oldCompleted;
        
        /// <remarks/>
        public event getImportExportStatusCompletedEventHandler getImportExportStatusCompleted;
        
        /// <remarks/>
        public event getAcceptedTasksInWorkflowCompletedEventHandler getAcceptedTasksInWorkflowCompleted;
        
        /// <remarks/>
        public event getCurrentTasksInWorkflowCompletedEventHandler getCurrentTasksInWorkflowCompleted;
        
        /// <remarks/>
        public event getUserUnavailabilityReportCompletedEventHandler getUserUnavailabilityReportCompleted;
        
        /// <remarks/>
        public event getFileProfileInfoExCompletedEventHandler getFileProfileInfoExCompleted;
        
        /// <remarks/>
        public event createDocumentumJobCompletedEventHandler createDocumentumJobCompleted;
        
        /// <remarks/>
        public event cancelDocumentumJobCompletedEventHandler cancelDocumentumJobCompleted;
        
        /// <remarks/>
        public event getDownloadableJobsCompletedEventHandler getDownloadableJobsCompleted;
        
        /// <remarks/>
        public event searchEntriesInBatchCompletedEventHandler searchEntriesInBatchCompleted;
        
        /// <remarks/>
        public event getAllPermissionsByUserCompletedEventHandler getAllPermissionsByUserCompleted;
        
        /// <remarks/>
        public event getAttributesByJobIdCompletedEventHandler getAttributesByJobIdCompleted;
        
        /// <remarks/>
        public event getAttributesByJobId1CompletedEventHandler getAttributesByJobId1Completed;
        
        /// <remarks/>
        public event getAttributesByProjectIdCompletedEventHandler getAttributesByProjectIdCompleted;
        
        /// <remarks/>
        public event getProjectIdByFileProfileIdCompletedEventHandler getProjectIdByFileProfileIdCompleted;
        
        /// <remarks/>
        public event getProjectIdByFileProfileId1CompletedEventHandler getProjectIdByFileProfileId1Completed;
        
        /// <remarks/>
        public event uploadAttributeFilesCompletedEventHandler uploadAttributeFilesCompleted;
        
        /// <remarks/>
        public event uploadCommentReferenceFilesCompletedEventHandler uploadCommentReferenceFilesCompleted;
        
        /// <remarks/>
        public event importOfflineKitFilesCompletedEventHandler importOfflineKitFilesCompleted;
        
        /// <remarks/>
        public event getOfflineFileUploadStatusCompletedEventHandler getOfflineFileUploadStatusCompleted;
        
        /// <remarks/>
        public event isExistedPermissionCompletedEventHandler isExistedPermissionCompleted;
        
        /// <remarks/>
        public event fetchJobIdsPerCompanyCompletedEventHandler fetchJobIdsPerCompanyCompleted;
        
        /// <remarks/>
        public event fetchJobsByCreatorCompletedEventHandler fetchJobsByCreatorCompleted;
        
        /// <remarks/>
        public event fetchJobsPerCompanyCompletedEventHandler fetchJobsPerCompanyCompleted;
        
        /// <remarks/>
        public event fetchJobsPerCompany1CompletedEventHandler fetchJobsPerCompany1Completed;
        
        /// <remarks/>
        public event fetchJobsPerCompany2CompletedEventHandler fetchJobsPerCompany2Completed;
        
        /// <remarks/>
        public event fetchWorkflowRelevantInfoCompletedEventHandler fetchWorkflowRelevantInfoCompleted;
        
        /// <remarks/>
        public event fetchWorkflowRelevantInfoByJobsCompletedEventHandler fetchWorkflowRelevantInfoByJobsCompleted;
        
        /// <remarks/>
        public event fetchFileForPreviewCompletedEventHandler fetchFileForPreviewCompleted;
        
        /// <remarks/>
        public event jobsWorkflowCanBeAddedCompletedEventHandler jobsWorkflowCanBeAddedCompleted;
        
        /// <remarks/>
        public event getJobsByTimeRangeCompletedEventHandler getJobsByTimeRangeCompleted;
        
        /// <remarks/>
        public event getJobsByTimeRange1CompletedEventHandler getJobsByTimeRange1Completed;
        
        /// <remarks/>
        public event getAllL10NProfilesCompletedEventHandler getAllL10NProfilesCompleted;
        
        /// <remarks/>
        public event downloadXliffOfflineFileCompletedEventHandler downloadXliffOfflineFileCompleted;
        
        /// <remarks/>
        public event downloadXliffOfflineFile1CompletedEventHandler downloadXliffOfflineFile1Completed;
        
        /// <remarks/>
        public event generateTranslationEditReportCompletedEventHandler generateTranslationEditReportCompleted;
        
        /// <remarks/>
        public event generatePostReviewQAReportCompletedEventHandler generatePostReviewQAReportCompleted;
        
        /// <remarks/>
        public event generateCharacterCountReportCompletedEventHandler generateCharacterCountReportCompleted;
        
        /// <remarks/>
        public event generateReviewersCommentReportCompletedEventHandler generateReviewersCommentReportCompleted;
        
        /// <remarks/>
        public event generateDITAQAReportCompletedEventHandler generateDITAQAReportCompleted;
        
        /// <remarks/>
        public event generateQAChecksReportCompletedEventHandler generateQAChecksReportCompleted;
        
        /// <remarks/>
        public event generateQAChecksReportsCompletedEventHandler generateQAChecksReportsCompleted;
        
        /// <remarks/>
        public event getWorkOfflineFilesCompletedEventHandler getWorkOfflineFilesCompleted;
        
        /// <remarks/>
        public event uploadWorkOfflineFilesCompletedEventHandler uploadWorkOfflineFilesCompleted;
        
        /// <remarks/>
        public event importWorkOfflineFilesCompletedEventHandler importWorkOfflineFilesCompleted;
        
        /// <remarks/>
        public event getTmExportStatusCompletedEventHandler getTmExportStatusCompleted;
        
        /// <remarks/>
        public event getInContextReviewLinkCompletedEventHandler getInContextReviewLinkCompleted;
        
        /// <remarks/>
        public event editEntryCompletedEventHandler editEntryCompleted;
        
        /// <remarks/>
        public event editEntry1CompletedEventHandler editEntry1Completed;
        
        /// <remarks/>
        public event editEntry2CompletedEventHandler editEntry2Completed;
        
        /// <remarks/>
        public event saveEntryCompletedEventHandler saveEntryCompleted;
        
        /// <remarks/>
        public event saveEntry1CompletedEventHandler saveEntry1Completed;
        
        /// <remarks/>
        public event saveEntry2CompletedEventHandler saveEntry2Completed;
        
        /// <remarks/>
        public event discardJobCompletedEventHandler discardJobCompleted;
        
        /// <remarks/>
        public event dispatchWorkflowCompletedEventHandler dispatchWorkflowCompleted;
        
        /// <remarks/>
        public event completeTaskCompletedEventHandler completeTaskCompleted;
        
        /// <remarks/>
        public event getAllTMProfilesCompletedEventHandler getAllTMProfilesCompleted;
        
        /// <remarks/>
        public event getXliffFileProfileCompletedEventHandler getXliffFileProfileCompleted;
        
        /// <remarks/>
        public event getJobAttributeCompletedEventHandler getJobAttributeCompleted;
        
        /// <remarks/>
        public event setJobAttributeCompletedEventHandler setJobAttributeCompleted;
        
        /// <remarks/>
        public event getUniqueJobNameCompletedEventHandler getUniqueJobNameCompleted;
        
        /// <remarks/>
        public event getUniqueJobName1CompletedEventHandler getUniqueJobName1Completed;
        
        /// <remarks/>
        public event createEditionJobCompletedEventHandler createEditionJobCompleted;
        
        /// <remarks/>
        public event getUserTimeZoneCompletedEventHandler getUserTimeZoneCompleted;
        
        /// <remarks/>
        public event getAllProjectTMsCompletedEventHandler getAllProjectTMsCompleted;
        
        /// <remarks/>
        public event getAllProjectsCompletedEventHandler getAllProjectsCompleted;
        
        /// <remarks/>
        public event generateReviewersCommentSimplifiedReportCompletedEventHandler generateReviewersCommentSimplifiedReportCompleted;
        
        /// <remarks/>
        public event getUsernameFromSessionCompletedEventHandler getUsernameFromSessionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserInfoReturn")]
        public string getUserInfo(string p_accessToken, string p_userId) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        p_accessToken,
                        p_userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string p_accessToken, string p_userId) {
            this.getUserInfoAsync(p_accessToken, p_userId, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string p_accessToken, string p_userId, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        p_accessToken,
                        p_userId}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchEntriesReturn")]
        public string searchEntries(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, bool isEscape) {
            object[] results = this.Invoke("searchEntries", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        isEscape});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchEntriesAsync(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, bool isEscape) {
            this.searchEntriesAsync(p_accessToken, p_tmProfileName, p_string, p_sourceLocale, isEscape, null);
        }
        
        /// <remarks/>
        public void searchEntriesAsync(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, bool isEscape, object userState) {
            if ((this.searchEntriesOperationCompleted == null)) {
                this.searchEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchEntriesOperationCompleted);
            }
            this.InvokeAsync("searchEntries", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        isEscape}, this.searchEntriesOperationCompleted, userState);
        }
        
        private void OnsearchEntriesOperationCompleted(object arg) {
            if ((this.searchEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchEntriesCompleted(this, new searchEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="searchEntries1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchEntriesReturn")]
        public string searchEntries(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string escapeString) {
            object[] results = this.Invoke("searchEntries1", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        escapeString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchEntries1Async(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string escapeString) {
            this.searchEntries1Async(p_accessToken, p_tmProfileName, p_string, p_sourceLocale, escapeString, null);
        }
        
        /// <remarks/>
        public void searchEntries1Async(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string escapeString, object userState) {
            if ((this.searchEntries1OperationCompleted == null)) {
                this.searchEntries1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchEntries1OperationCompleted);
            }
            this.InvokeAsync("searchEntries1", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        escapeString}, this.searchEntries1OperationCompleted, userState);
        }
        
        private void OnsearchEntries1OperationCompleted(object arg) {
            if ((this.searchEntries1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchEntries1Completed(this, new searchEntries1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="searchEntries2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchEntriesReturn")]
        public string searchEntries(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale) {
            object[] results = this.Invoke("searchEntries2", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchEntries2Async(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale) {
            this.searchEntries2Async(p_accessToken, p_tmProfileName, p_string, p_sourceLocale, null);
        }
        
        /// <remarks/>
        public void searchEntries2Async(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, object userState) {
            if ((this.searchEntries2OperationCompleted == null)) {
                this.searchEntries2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchEntries2OperationCompleted);
            }
            this.InvokeAsync("searchEntries2", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale}, this.searchEntries2OperationCompleted, userState);
        }
        
        private void OnsearchEntries2OperationCompleted(object arg) {
            if ((this.searchEntries2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchEntries2Completed(this, new searchEntries2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVersionReturn")]
        public string getVersion(string p_accessToken) {
            object[] results = this.Invoke("getVersion", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync(string p_accessToken) {
            this.getVersionAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getVersionAsync(string p_accessToken, object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[] {
                        p_accessToken}, this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getConnectionReturn")]
        public string getConnection(string p_accessToken) {
            object[] results = this.Invoke("getConnection", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getConnectionAsync(string p_accessToken) {
            this.getConnectionAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getConnectionAsync(string p_accessToken, object userState) {
            if ((this.getConnectionOperationCompleted == null)) {
                this.getConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConnectionOperationCompleted);
            }
            this.InvokeAsync("getConnection", new object[] {
                        p_accessToken}, this.getConnectionOperationCompleted, userState);
        }
        
        private void OngetConnectionOperationCompleted(object arg) {
            if ((this.getConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConnectionCompleted(this, new getConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public string login(string p_username, string p_password) {
            object[] results = this.Invoke("login", new object[] {
                        p_username,
                        p_password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string p_username, string p_password) {
            this.loginAsync(p_username, p_password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string p_username, string p_password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        p_username,
                        p_password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCommentReturn")]
        public string addComment(string p_accessToken, long p_objectId, int p_objectType, string p_userId, string p_comment, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] p_file, string p_fileName, string p_access) {
            object[] results = this.Invoke("addComment", new object[] {
                        p_accessToken,
                        p_objectId,
                        p_objectType,
                        p_userId,
                        p_comment,
                        p_file,
                        p_fileName,
                        p_access});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCommentAsync(string p_accessToken, long p_objectId, int p_objectType, string p_userId, string p_comment, byte[] p_file, string p_fileName, string p_access) {
            this.addCommentAsync(p_accessToken, p_objectId, p_objectType, p_userId, p_comment, p_file, p_fileName, p_access, null);
        }
        
        /// <remarks/>
        public void addCommentAsync(string p_accessToken, long p_objectId, int p_objectType, string p_userId, string p_comment, byte[] p_file, string p_fileName, string p_access, object userState) {
            if ((this.addCommentOperationCompleted == null)) {
                this.addCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCommentOperationCompleted);
            }
            this.InvokeAsync("addComment", new object[] {
                        p_accessToken,
                        p_objectId,
                        p_objectType,
                        p_userId,
                        p_comment,
                        p_file,
                        p_fileName,
                        p_access}, this.addCommentOperationCompleted, userState);
        }
        
        private void OnaddCommentOperationCompleted(object arg) {
            if ((this.addCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCommentCompleted(this, new addCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllUsersReturn")]
        public string getAllUsers(string p_accessToken) {
            object[] results = this.Invoke("getAllUsers", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllUsersAsync(string p_accessToken) {
            this.getAllUsersAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllUsersAsync(string p_accessToken, object userState) {
            if ((this.getAllUsersOperationCompleted == null)) {
                this.getAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUsersOperationCompleted);
            }
            this.InvokeAsync("getAllUsers", new object[] {
                        p_accessToken}, this.getAllUsersOperationCompleted, userState);
        }
        
        private void OngetAllUsersOperationCompleted(object arg) {
            if ((this.getAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllUsersCompleted(this, new getAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getStatusReturn")]
        public string getStatus(string p_accessToken, string p_jobName) {
            object[] results = this.Invoke("getStatus", new object[] {
                        p_accessToken,
                        p_jobName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusAsync(string p_accessToken, string p_jobName) {
            this.getStatusAsync(p_accessToken, p_jobName, null);
        }
        
        /// <remarks/>
        public void getStatusAsync(string p_accessToken, string p_jobName, object userState) {
            if ((this.getStatusOperationCompleted == null)) {
                this.getStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusOperationCompleted);
            }
            this.InvokeAsync("getStatus", new object[] {
                        p_accessToken,
                        p_jobName}, this.getStatusOperationCompleted, userState);
        }
        
        private void OngetStatusOperationCompleted(object arg) {
            if ((this.getStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusCompleted(this, new getStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getJobStatusReturn")]
        public string getJobStatus(string p_accessToken, string p_jobName) {
            object[] results = this.Invoke("getJobStatus", new object[] {
                        p_accessToken,
                        p_jobName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJobStatusAsync(string p_accessToken, string p_jobName) {
            this.getJobStatusAsync(p_accessToken, p_jobName, null);
        }
        
        /// <remarks/>
        public void getJobStatusAsync(string p_accessToken, string p_jobName, object userState) {
            if ((this.getJobStatusOperationCompleted == null)) {
                this.getJobStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobStatusOperationCompleted);
            }
            this.InvokeAsync("getJobStatus", new object[] {
                        p_accessToken,
                        p_jobName}, this.getJobStatusOperationCompleted, userState);
        }
        
        private void OngetJobStatusOperationCompleted(object arg) {
            if ((this.getJobStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobStatusCompleted(this, new getJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancelJobByIdReturn")]
        public string cancelJobById(string p_accessToken, long p_jobId) {
            object[] results = this.Invoke("cancelJobById", new object[] {
                        p_accessToken,
                        p_jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelJobByIdAsync(string p_accessToken, long p_jobId) {
            this.cancelJobByIdAsync(p_accessToken, p_jobId, null);
        }
        
        /// <remarks/>
        public void cancelJobByIdAsync(string p_accessToken, long p_jobId, object userState) {
            if ((this.cancelJobByIdOperationCompleted == null)) {
                this.cancelJobByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelJobByIdOperationCompleted);
            }
            this.InvokeAsync("cancelJobById", new object[] {
                        p_accessToken,
                        p_jobId}, this.cancelJobByIdOperationCompleted, userState);
        }
        
        private void OncancelJobByIdOperationCompleted(object arg) {
            if ((this.cancelJobByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelJobByIdCompleted(this, new cancelJobByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancelJobsReturn")]
        public string cancelJobs(string p_accessToken, string p_jobIds) {
            object[] results = this.Invoke("cancelJobs", new object[] {
                        p_accessToken,
                        p_jobIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelJobsAsync(string p_accessToken, string p_jobIds) {
            this.cancelJobsAsync(p_accessToken, p_jobIds, null);
        }
        
        /// <remarks/>
        public void cancelJobsAsync(string p_accessToken, string p_jobIds, object userState) {
            if ((this.cancelJobsOperationCompleted == null)) {
                this.cancelJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelJobsOperationCompleted);
            }
            this.InvokeAsync("cancelJobs", new object[] {
                        p_accessToken,
                        p_jobIds}, this.cancelJobsOperationCompleted, userState);
        }
        
        private void OncancelJobsOperationCompleted(object arg) {
            if ((this.cancelJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelJobsCompleted(this, new cancelJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportWorkflowReturn")]
        public string exportWorkflow(string p_accessToken, string p_jobName, string p_workflowLocale) {
            object[] results = this.Invoke("exportWorkflow", new object[] {
                        p_accessToken,
                        p_jobName,
                        p_workflowLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportWorkflowAsync(string p_accessToken, string p_jobName, string p_workflowLocale) {
            this.exportWorkflowAsync(p_accessToken, p_jobName, p_workflowLocale, null);
        }
        
        /// <remarks/>
        public void exportWorkflowAsync(string p_accessToken, string p_jobName, string p_workflowLocale, object userState) {
            if ((this.exportWorkflowOperationCompleted == null)) {
                this.exportWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportWorkflowOperationCompleted);
            }
            this.InvokeAsync("exportWorkflow", new object[] {
                        p_accessToken,
                        p_jobName,
                        p_workflowLocale}, this.exportWorkflowOperationCompleted, userState);
        }
        
        private void OnexportWorkflowOperationCompleted(object arg) {
            if ((this.exportWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportWorkflowCompleted(this, new exportWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportJobReturn")]
        public string exportJob(string p_accessToken, string p_jobName) {
            object[] results = this.Invoke("exportJob", new object[] {
                        p_accessToken,
                        p_jobName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportJobAsync(string p_accessToken, string p_jobName) {
            this.exportJobAsync(p_accessToken, p_jobName, null);
        }
        
        /// <remarks/>
        public void exportJobAsync(string p_accessToken, string p_jobName, object userState) {
            if ((this.exportJobOperationCompleted == null)) {
                this.exportJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportJobOperationCompleted);
            }
            this.InvokeAsync("exportJob", new object[] {
                        p_accessToken,
                        p_jobName}, this.exportJobOperationCompleted, userState);
        }
        
        private void OnexportJobOperationCompleted(object arg) {
            if ((this.exportJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportJobCompleted(this, new exportJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTasksInJobReturn")]
        public string getTasksInJob(string p_accessToken, long p_jobId, string p_taskName) {
            object[] results = this.Invoke("getTasksInJob", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_taskName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTasksInJobAsync(string p_accessToken, long p_jobId, string p_taskName) {
            this.getTasksInJobAsync(p_accessToken, p_jobId, p_taskName, null);
        }
        
        /// <remarks/>
        public void getTasksInJobAsync(string p_accessToken, long p_jobId, string p_taskName, object userState) {
            if ((this.getTasksInJobOperationCompleted == null)) {
                this.getTasksInJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTasksInJobOperationCompleted);
            }
            this.InvokeAsync("getTasksInJob", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_taskName}, this.getTasksInJobOperationCompleted, userState);
        }
        
        private void OngetTasksInJobOperationCompleted(object arg) {
            if ((this.getTasksInJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTasksInJobCompleted(this, new getTasksInJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTasksInJobsReturn")]
        public string getTasksInJobs(string p_accessToken, string jobIds, string p_taskName) {
            object[] results = this.Invoke("getTasksInJobs", new object[] {
                        p_accessToken,
                        jobIds,
                        p_taskName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTasksInJobsAsync(string p_accessToken, string jobIds, string p_taskName) {
            this.getTasksInJobsAsync(p_accessToken, jobIds, p_taskName, null);
        }
        
        /// <remarks/>
        public void getTasksInJobsAsync(string p_accessToken, string jobIds, string p_taskName, object userState) {
            if ((this.getTasksInJobsOperationCompleted == null)) {
                this.getTasksInJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTasksInJobsOperationCompleted);
            }
            this.InvokeAsync("getTasksInJobs", new object[] {
                        p_accessToken,
                        jobIds,
                        p_taskName}, this.getTasksInJobsOperationCompleted, userState);
        }
        
        private void OngetTasksInJobsOperationCompleted(object arg) {
            if ((this.getTasksInJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTasksInJobsCompleted(this, new getTasksInJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("passDCTMAccountReturn")]
        public string passDCTMAccount(string p_accessToken, string docBase, string dctmUserName, string dctmPassword) {
            object[] results = this.Invoke("passDCTMAccount", new object[] {
                        p_accessToken,
                        docBase,
                        dctmUserName,
                        dctmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void passDCTMAccountAsync(string p_accessToken, string docBase, string dctmUserName, string dctmPassword) {
            this.passDCTMAccountAsync(p_accessToken, docBase, dctmUserName, dctmPassword, null);
        }
        
        /// <remarks/>
        public void passDCTMAccountAsync(string p_accessToken, string docBase, string dctmUserName, string dctmPassword, object userState) {
            if ((this.passDCTMAccountOperationCompleted == null)) {
                this.passDCTMAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpassDCTMAccountOperationCompleted);
            }
            this.InvokeAsync("passDCTMAccount", new object[] {
                        p_accessToken,
                        docBase,
                        dctmUserName,
                        dctmPassword}, this.passDCTMAccountOperationCompleted, userState);
        }
        
        private void OnpassDCTMAccountOperationCompleted(object arg) {
            if ((this.passDCTMAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.passDCTMAccountCompleted(this, new passDCTMAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getGSVersionReturn")]
        public string getGSVersion(string p_accessToken) {
            object[] results = this.Invoke("getGSVersion", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGSVersionAsync(string p_accessToken) {
            this.getGSVersionAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getGSVersionAsync(string p_accessToken, object userState) {
            if ((this.getGSVersionOperationCompleted == null)) {
                this.getGSVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGSVersionOperationCompleted);
            }
            this.InvokeAsync("getGSVersion", new object[] {
                        p_accessToken}, this.getGSVersionOperationCompleted, userState);
        }
        
        private void OngetGSVersionOperationCompleted(object arg) {
            if ((this.getGSVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGSVersionCompleted(this, new getGSVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void deleteSegment(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale, string escapeString) {
            this.Invoke("deleteSegment", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        p_deleteLocale,
                        escapeString});
        }
        
        /// <remarks/>
        public void deleteSegmentAsync(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale, string escapeString) {
            this.deleteSegmentAsync(p_accessToken, p_tmProfileName, p_string, p_sourceLocale, p_deleteLocale, escapeString, null);
        }
        
        /// <remarks/>
        public void deleteSegmentAsync(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale, string escapeString, object userState) {
            if ((this.deleteSegmentOperationCompleted == null)) {
                this.deleteSegmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSegmentOperationCompleted);
            }
            this.InvokeAsync("deleteSegment", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        p_deleteLocale,
                        escapeString}, this.deleteSegmentOperationCompleted, userState);
        }
        
        private void OndeleteSegmentOperationCompleted(object arg) {
            if ((this.deleteSegmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSegmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="deleteSegment1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void deleteSegment(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale, bool isEscape) {
            this.Invoke("deleteSegment1", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        p_deleteLocale,
                        isEscape});
        }
        
        /// <remarks/>
        public void deleteSegment1Async(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale, bool isEscape) {
            this.deleteSegment1Async(p_accessToken, p_tmProfileName, p_string, p_sourceLocale, p_deleteLocale, isEscape, null);
        }
        
        /// <remarks/>
        public void deleteSegment1Async(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale, bool isEscape, object userState) {
            if ((this.deleteSegment1OperationCompleted == null)) {
                this.deleteSegment1OperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSegment1OperationCompleted);
            }
            this.InvokeAsync("deleteSegment1", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        p_deleteLocale,
                        isEscape}, this.deleteSegment1OperationCompleted, userState);
        }
        
        private void OndeleteSegment1OperationCompleted(object arg) {
            if ((this.deleteSegment1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSegment1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="deleteSegment2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void deleteSegment(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale) {
            this.Invoke("deleteSegment2", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        p_deleteLocale});
        }
        
        /// <remarks/>
        public void deleteSegment2Async(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale) {
            this.deleteSegment2Async(p_accessToken, p_tmProfileName, p_string, p_sourceLocale, p_deleteLocale, null);
        }
        
        /// <remarks/>
        public void deleteSegment2Async(string p_accessToken, string p_tmProfileName, string p_string, string p_sourceLocale, string p_deleteLocale, object userState) {
            if ((this.deleteSegment2OperationCompleted == null)) {
                this.deleteSegment2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSegment2OperationCompleted);
            }
            this.InvokeAsync("deleteSegment2", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_string,
                        p_sourceLocale,
                        p_deleteLocale}, this.deleteSegment2OperationCompleted, userState);
        }
        
        private void OndeleteSegment2OperationCompleted(object arg) {
            if ((this.deleteSegment2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSegment2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllTermbasesReturn")]
        public string getAllTermbases(string p_accessToken) {
            object[] results = this.Invoke("getAllTermbases", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllTermbasesAsync(string p_accessToken) {
            this.getAllTermbasesAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllTermbasesAsync(string p_accessToken, object userState) {
            if ((this.getAllTermbasesOperationCompleted == null)) {
                this.getAllTermbasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTermbasesOperationCompleted);
            }
            this.InvokeAsync("getAllTermbases", new object[] {
                        p_accessToken}, this.getAllTermbasesOperationCompleted, userState);
        }
        
        private void OngetAllTermbasesOperationCompleted(object arg) {
            if ((this.getAllTermbasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTermbasesCompleted(this, new getAllTermbasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void saveTBEntry(string p_accessToken, string p_termbaseName, string p_sourceLocale, string p_sourceTerm, string p_targetLocale, string p_targetTerm) {
            this.Invoke("saveTBEntry", new object[] {
                        p_accessToken,
                        p_termbaseName,
                        p_sourceLocale,
                        p_sourceTerm,
                        p_targetLocale,
                        p_targetTerm});
        }
        
        /// <remarks/>
        public void saveTBEntryAsync(string p_accessToken, string p_termbaseName, string p_sourceLocale, string p_sourceTerm, string p_targetLocale, string p_targetTerm) {
            this.saveTBEntryAsync(p_accessToken, p_termbaseName, p_sourceLocale, p_sourceTerm, p_targetLocale, p_targetTerm, null);
        }
        
        /// <remarks/>
        public void saveTBEntryAsync(string p_accessToken, string p_termbaseName, string p_sourceLocale, string p_sourceTerm, string p_targetLocale, string p_targetTerm, object userState) {
            if ((this.saveTBEntryOperationCompleted == null)) {
                this.saveTBEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveTBEntryOperationCompleted);
            }
            this.InvokeAsync("saveTBEntry", new object[] {
                        p_accessToken,
                        p_termbaseName,
                        p_sourceLocale,
                        p_sourceTerm,
                        p_targetLocale,
                        p_targetTerm}, this.saveTBEntryOperationCompleted, userState);
        }
        
        private void OnsaveTBEntryOperationCompleted(object arg) {
            if ((this.saveTBEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveTBEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTBEntriesReturn")]
        public string searchTBEntries(string p_accessToken, string p_termbaseName, string p_searchString, string p_sourceLocale, string p_targetLocale, double p_matchType) {
            object[] results = this.Invoke("searchTBEntries", new object[] {
                        p_accessToken,
                        p_termbaseName,
                        p_searchString,
                        p_sourceLocale,
                        p_targetLocale,
                        p_matchType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchTBEntriesAsync(string p_accessToken, string p_termbaseName, string p_searchString, string p_sourceLocale, string p_targetLocale, double p_matchType) {
            this.searchTBEntriesAsync(p_accessToken, p_termbaseName, p_searchString, p_sourceLocale, p_targetLocale, p_matchType, null);
        }
        
        /// <remarks/>
        public void searchTBEntriesAsync(string p_accessToken, string p_termbaseName, string p_searchString, string p_sourceLocale, string p_targetLocale, double p_matchType, object userState) {
            if ((this.searchTBEntriesOperationCompleted == null)) {
                this.searchTBEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTBEntriesOperationCompleted);
            }
            this.InvokeAsync("searchTBEntries", new object[] {
                        p_accessToken,
                        p_termbaseName,
                        p_searchString,
                        p_sourceLocale,
                        p_targetLocale,
                        p_matchType}, this.searchTBEntriesOperationCompleted, userState);
        }
        
        private void OnsearchTBEntriesOperationCompleted(object arg) {
            if ((this.searchTBEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTBEntriesCompleted(this, new searchTBEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void editTBEntry(string p_accessToken, string p_termbaseName, string p_sourceLocale, string p_sourceTerm, string p_targetLocale, string p_targetTerm, object connection) {
            this.Invoke("editTBEntry", new object[] {
                        p_accessToken,
                        p_termbaseName,
                        p_sourceLocale,
                        p_sourceTerm,
                        p_targetLocale,
                        p_targetTerm,
                        connection});
        }
        
        /// <remarks/>
        public void editTBEntryAsync(string p_accessToken, string p_termbaseName, string p_sourceLocale, string p_sourceTerm, string p_targetLocale, string p_targetTerm, object connection) {
            this.editTBEntryAsync(p_accessToken, p_termbaseName, p_sourceLocale, p_sourceTerm, p_targetLocale, p_targetTerm, connection, null);
        }
        
        /// <remarks/>
        public void editTBEntryAsync(string p_accessToken, string p_termbaseName, string p_sourceLocale, string p_sourceTerm, string p_targetLocale, string p_targetTerm, object connection, object userState) {
            if ((this.editTBEntryOperationCompleted == null)) {
                this.editTBEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTBEntryOperationCompleted);
            }
            this.InvokeAsync("editTBEntry", new object[] {
                        p_accessToken,
                        p_termbaseName,
                        p_sourceLocale,
                        p_sourceTerm,
                        p_targetLocale,
                        p_targetTerm,
                        connection}, this.editTBEntryOperationCompleted, userState);
        }
        
        private void OneditTBEntryOperationCompleted(object arg) {
            if ((this.editTBEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTBEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void deleteTBEntry(string p_accessToken, string p_termbaseName, string p_searchString, string p_sourceLocale, string p_targetLocale) {
            this.Invoke("deleteTBEntry", new object[] {
                        p_accessToken,
                        p_termbaseName,
                        p_searchString,
                        p_sourceLocale,
                        p_targetLocale});
        }
        
        /// <remarks/>
        public void deleteTBEntryAsync(string p_accessToken, string p_termbaseName, string p_searchString, string p_sourceLocale, string p_targetLocale) {
            this.deleteTBEntryAsync(p_accessToken, p_termbaseName, p_searchString, p_sourceLocale, p_targetLocale, null);
        }
        
        /// <remarks/>
        public void deleteTBEntryAsync(string p_accessToken, string p_termbaseName, string p_searchString, string p_sourceLocale, string p_targetLocale, object userState) {
            if ((this.deleteTBEntryOperationCompleted == null)) {
                this.deleteTBEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTBEntryOperationCompleted);
            }
            this.InvokeAsync("deleteTBEntry", new object[] {
                        p_accessToken,
                        p_termbaseName,
                        p_searchString,
                        p_sourceLocale,
                        p_targetLocale}, this.deleteTBEntryOperationCompleted, userState);
        }
        
        private void OndeleteTBEntryOperationCompleted(object arg) {
            if ((this.deleteTBEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTBEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFirstTuReturn")]
        public string getFirstTu(string accessToken, string tmName, string companyName, string sourceLocale, string targetLocale) {
            object[] results = this.Invoke("getFirstTu", new object[] {
                        accessToken,
                        tmName,
                        companyName,
                        sourceLocale,
                        targetLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFirstTuAsync(string accessToken, string tmName, string companyName, string sourceLocale, string targetLocale) {
            this.getFirstTuAsync(accessToken, tmName, companyName, sourceLocale, targetLocale, null);
        }
        
        /// <remarks/>
        public void getFirstTuAsync(string accessToken, string tmName, string companyName, string sourceLocale, string targetLocale, object userState) {
            if ((this.getFirstTuOperationCompleted == null)) {
                this.getFirstTuOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFirstTuOperationCompleted);
            }
            this.InvokeAsync("getFirstTu", new object[] {
                        accessToken,
                        tmName,
                        companyName,
                        sourceLocale,
                        targetLocale}, this.getFirstTuOperationCompleted, userState);
        }
        
        private void OngetFirstTuOperationCompleted(object arg) {
            if ((this.getFirstTuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFirstTuCompleted(this, new getFirstTuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("nextTusReturn")]
        public string nextTus(string accessToken, string sourceLocale, string targetLocale, string maxSize, string tuIdToStart) {
            object[] results = this.Invoke("nextTus", new object[] {
                        accessToken,
                        sourceLocale,
                        targetLocale,
                        maxSize,
                        tuIdToStart});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void nextTusAsync(string accessToken, string sourceLocale, string targetLocale, string maxSize, string tuIdToStart) {
            this.nextTusAsync(accessToken, sourceLocale, targetLocale, maxSize, tuIdToStart, null);
        }
        
        /// <remarks/>
        public void nextTusAsync(string accessToken, string sourceLocale, string targetLocale, string maxSize, string tuIdToStart, object userState) {
            if ((this.nextTusOperationCompleted == null)) {
                this.nextTusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnextTusOperationCompleted);
            }
            this.InvokeAsync("nextTus", new object[] {
                        accessToken,
                        sourceLocale,
                        targetLocale,
                        maxSize,
                        tuIdToStart}, this.nextTusOperationCompleted, userState);
        }
        
        private void OnnextTusOperationCompleted(object arg) {
            if ((this.nextTusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nextTusCompleted(this, new nextTusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="nextTus1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("nextTusReturn")]
        public string nextTus(string accessToken, string tmName, string companyName, string sourceLocale, string targetLocale, string maxSize, string tuIdToStart) {
            object[] results = this.Invoke("nextTus1", new object[] {
                        accessToken,
                        tmName,
                        companyName,
                        sourceLocale,
                        targetLocale,
                        maxSize,
                        tuIdToStart});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void nextTus1Async(string accessToken, string tmName, string companyName, string sourceLocale, string targetLocale, string maxSize, string tuIdToStart) {
            this.nextTus1Async(accessToken, tmName, companyName, sourceLocale, targetLocale, maxSize, tuIdToStart, null);
        }
        
        /// <remarks/>
        public void nextTus1Async(string accessToken, string tmName, string companyName, string sourceLocale, string targetLocale, string maxSize, string tuIdToStart, object userState) {
            if ((this.nextTus1OperationCompleted == null)) {
                this.nextTus1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnnextTus1OperationCompleted);
            }
            this.InvokeAsync("nextTus1", new object[] {
                        accessToken,
                        tmName,
                        companyName,
                        sourceLocale,
                        targetLocale,
                        maxSize,
                        tuIdToStart}, this.nextTus1OperationCompleted, userState);
        }
        
        private void OnnextTus1OperationCompleted(object arg) {
            if ((this.nextTus1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nextTus1Completed(this, new nextTus1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("editTuReturn")]
        public string editTu(string accessToken, string tmName, string companyName, string tmx) {
            object[] results = this.Invoke("editTu", new object[] {
                        accessToken,
                        tmName,
                        companyName,
                        tmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editTuAsync(string accessToken, string tmName, string companyName, string tmx) {
            this.editTuAsync(accessToken, tmName, companyName, tmx, null);
        }
        
        /// <remarks/>
        public void editTuAsync(string accessToken, string tmName, string companyName, string tmx, object userState) {
            if ((this.editTuOperationCompleted == null)) {
                this.editTuOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTuOperationCompleted);
            }
            this.InvokeAsync("editTu", new object[] {
                        accessToken,
                        tmName,
                        companyName,
                        tmx}, this.editTuOperationCompleted, userState);
        }
        
        private void OneditTuOperationCompleted(object arg) {
            if ((this.editTuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTuCompleted(this, new editTuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="editTu1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("editTuReturn")]
        public string editTu(string accessToken, string tmx) {
            object[] results = this.Invoke("editTu1", new object[] {
                        accessToken,
                        tmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editTu1Async(string accessToken, string tmx) {
            this.editTu1Async(accessToken, tmx, null);
        }
        
        /// <remarks/>
        public void editTu1Async(string accessToken, string tmx, object userState) {
            if ((this.editTu1OperationCompleted == null)) {
                this.editTu1OperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTu1OperationCompleted);
            }
            this.InvokeAsync("editTu1", new object[] {
                        accessToken,
                        tmx}, this.editTu1OperationCompleted, userState);
        }
        
        private void OneditTu1OperationCompleted(object arg) {
            if ((this.editTu1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTu1Completed(this, new editTu1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSourceLocalesReturn")]
        public string getSourceLocales(string p_accessToken) {
            object[] results = this.Invoke("getSourceLocales", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSourceLocalesAsync(string p_accessToken) {
            this.getSourceLocalesAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getSourceLocalesAsync(string p_accessToken, object userState) {
            if ((this.getSourceLocalesOperationCompleted == null)) {
                this.getSourceLocalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourceLocalesOperationCompleted);
            }
            this.InvokeAsync("getSourceLocales", new object[] {
                        p_accessToken}, this.getSourceLocalesOperationCompleted, userState);
        }
        
        private void OngetSourceLocalesOperationCompleted(object arg) {
            if ((this.getSourceLocalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourceLocalesCompleted(this, new getSourceLocalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPriorityByIDReturn")]
        public string getPriorityByID(string p_accessToken, string p_l10nID) {
            object[] results = this.Invoke("getPriorityByID", new object[] {
                        p_accessToken,
                        p_l10nID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPriorityByIDAsync(string p_accessToken, string p_l10nID) {
            this.getPriorityByIDAsync(p_accessToken, p_l10nID, null);
        }
        
        /// <remarks/>
        public void getPriorityByIDAsync(string p_accessToken, string p_l10nID, object userState) {
            if ((this.getPriorityByIDOperationCompleted == null)) {
                this.getPriorityByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPriorityByIDOperationCompleted);
            }
            this.InvokeAsync("getPriorityByID", new object[] {
                        p_accessToken,
                        p_l10nID}, this.getPriorityByIDOperationCompleted, userState);
        }
        
        private void OngetPriorityByIDOperationCompleted(object arg) {
            if ((this.getPriorityByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPriorityByIDCompleted(this, new getPriorityByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchCompanyInfoReturn")]
        public string fetchCompanyInfo(string p_accessToken) {
            object[] results = this.Invoke("fetchCompanyInfo", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchCompanyInfoAsync(string p_accessToken) {
            this.fetchCompanyInfoAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void fetchCompanyInfoAsync(string p_accessToken, object userState) {
            if ((this.fetchCompanyInfoOperationCompleted == null)) {
                this.fetchCompanyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchCompanyInfoOperationCompleted);
            }
            this.InvokeAsync("fetchCompanyInfo", new object[] {
                        p_accessToken}, this.fetchCompanyInfoOperationCompleted, userState);
        }
        
        private void OnfetchCompanyInfoOperationCompleted(object arg) {
            if ((this.fetchCompanyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchCompanyInfoCompleted(this, new fetchCompanyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchJobsByRangeReturn")]
        public string fetchJobsByRange(string p_accessToken, int p_offset, int p_count, bool p_isDescOrder) {
            object[] results = this.Invoke("fetchJobsByRange", new object[] {
                        p_accessToken,
                        p_offset,
                        p_count,
                        p_isDescOrder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchJobsByRangeAsync(string p_accessToken, int p_offset, int p_count, bool p_isDescOrder) {
            this.fetchJobsByRangeAsync(p_accessToken, p_offset, p_count, p_isDescOrder, null);
        }
        
        /// <remarks/>
        public void fetchJobsByRangeAsync(string p_accessToken, int p_offset, int p_count, bool p_isDescOrder, object userState) {
            if ((this.fetchJobsByRangeOperationCompleted == null)) {
                this.fetchJobsByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchJobsByRangeOperationCompleted);
            }
            this.InvokeAsync("fetchJobsByRange", new object[] {
                        p_accessToken,
                        p_offset,
                        p_count,
                        p_isDescOrder}, this.fetchJobsByRangeOperationCompleted, userState);
        }
        
        private void OnfetchJobsByRangeOperationCompleted(object arg) {
            if ((this.fetchJobsByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchJobsByRangeCompleted(this, new fetchJobsByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchJobsByStateReturn")]
        public string fetchJobsByState(string p_accessToken, string p_state, int p_offset, int p_count, bool p_isDescOrder) {
            object[] results = this.Invoke("fetchJobsByState", new object[] {
                        p_accessToken,
                        p_state,
                        p_offset,
                        p_count,
                        p_isDescOrder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchJobsByStateAsync(string p_accessToken, string p_state, int p_offset, int p_count, bool p_isDescOrder) {
            this.fetchJobsByStateAsync(p_accessToken, p_state, p_offset, p_count, p_isDescOrder, null);
        }
        
        /// <remarks/>
        public void fetchJobsByStateAsync(string p_accessToken, string p_state, int p_offset, int p_count, bool p_isDescOrder, object userState) {
            if ((this.fetchJobsByStateOperationCompleted == null)) {
                this.fetchJobsByStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchJobsByStateOperationCompleted);
            }
            this.InvokeAsync("fetchJobsByState", new object[] {
                        p_accessToken,
                        p_state,
                        p_offset,
                        p_count,
                        p_isDescOrder}, this.fetchJobsByStateOperationCompleted, userState);
        }
        
        private void OnfetchJobsByStateOperationCompleted(object arg) {
            if ((this.fetchJobsByStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchJobsByStateCompleted(this, new fetchJobsByStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCommentFilesReturn")]
        public string getCommentFiles(string p_accessToken, string p_commentObjectType, string p_jobOrTaskId) {
            object[] results = this.Invoke("getCommentFiles", new object[] {
                        p_accessToken,
                        p_commentObjectType,
                        p_jobOrTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCommentFilesAsync(string p_accessToken, string p_commentObjectType, string p_jobOrTaskId) {
            this.getCommentFilesAsync(p_accessToken, p_commentObjectType, p_jobOrTaskId, null);
        }
        
        /// <remarks/>
        public void getCommentFilesAsync(string p_accessToken, string p_commentObjectType, string p_jobOrTaskId, object userState) {
            if ((this.getCommentFilesOperationCompleted == null)) {
                this.getCommentFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommentFilesOperationCompleted);
            }
            this.InvokeAsync("getCommentFiles", new object[] {
                        p_accessToken,
                        p_commentObjectType,
                        p_jobOrTaskId}, this.getCommentFilesOperationCompleted, userState);
        }
        
        private void OngetCommentFilesOperationCompleted(object arg) {
            if ((this.getCommentFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommentFilesCompleted(this, new getCommentFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("uploadTmxFileReturn")]
        public string uploadTmxFile(string p_accessToken, string p_fileName, string p_tmName, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] p_contentsInBytes) {
            object[] results = this.Invoke("uploadTmxFile", new object[] {
                        p_accessToken,
                        p_fileName,
                        p_tmName,
                        p_contentsInBytes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadTmxFileAsync(string p_accessToken, string p_fileName, string p_tmName, byte[] p_contentsInBytes) {
            this.uploadTmxFileAsync(p_accessToken, p_fileName, p_tmName, p_contentsInBytes, null);
        }
        
        /// <remarks/>
        public void uploadTmxFileAsync(string p_accessToken, string p_fileName, string p_tmName, byte[] p_contentsInBytes, object userState) {
            if ((this.uploadTmxFileOperationCompleted == null)) {
                this.uploadTmxFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadTmxFileOperationCompleted);
            }
            this.InvokeAsync("uploadTmxFile", new object[] {
                        p_accessToken,
                        p_fileName,
                        p_tmName,
                        p_contentsInBytes}, this.uploadTmxFileOperationCompleted, userState);
        }
        
        private void OnuploadTmxFileOperationCompleted(object arg) {
            if ((this.uploadTmxFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadTmxFileCompleted(this, new uploadTmxFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void importTmxFile(string p_accessToken, string p_tmName, string p_syncMode) {
            this.Invoke("importTmxFile", new object[] {
                        p_accessToken,
                        p_tmName,
                        p_syncMode});
        }
        
        /// <remarks/>
        public void importTmxFileAsync(string p_accessToken, string p_tmName, string p_syncMode) {
            this.importTmxFileAsync(p_accessToken, p_tmName, p_syncMode, null);
        }
        
        /// <remarks/>
        public void importTmxFileAsync(string p_accessToken, string p_tmName, string p_syncMode, object userState) {
            if ((this.importTmxFileOperationCompleted == null)) {
                this.importTmxFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportTmxFileOperationCompleted);
            }
            this.InvokeAsync("importTmxFile", new object[] {
                        p_accessToken,
                        p_tmName,
                        p_syncMode}, this.importTmxFileOperationCompleted, userState);
        }
        
        private void OnimportTmxFileOperationCompleted(object arg) {
            if ((this.importTmxFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importTmxFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("jobsSkipActivityReturn")]
        public string jobsSkipActivity(string p_accessToken, string p_workflowId, string p_activity) {
            object[] results = this.Invoke("jobsSkipActivity", new object[] {
                        p_accessToken,
                        p_workflowId,
                        p_activity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void jobsSkipActivityAsync(string p_accessToken, string p_workflowId, string p_activity) {
            this.jobsSkipActivityAsync(p_accessToken, p_workflowId, p_activity, null);
        }
        
        /// <remarks/>
        public void jobsSkipActivityAsync(string p_accessToken, string p_workflowId, string p_activity, object userState) {
            if ((this.jobsSkipActivityOperationCompleted == null)) {
                this.jobsSkipActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnjobsSkipActivityOperationCompleted);
            }
            this.InvokeAsync("jobsSkipActivity", new object[] {
                        p_accessToken,
                        p_workflowId,
                        p_activity}, this.jobsSkipActivityOperationCompleted, userState);
        }
        
        private void OnjobsSkipActivityOperationCompleted(object arg) {
            if ((this.jobsSkipActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.jobsSkipActivityCompleted(this, new jobsSkipActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("taskReassignReturn")]
        public string taskReassign(string p_accessToken, string p_taskId, string[] p_users) {
            object[] results = this.Invoke("taskReassign", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_users});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void taskReassignAsync(string p_accessToken, string p_taskId, string[] p_users) {
            this.taskReassignAsync(p_accessToken, p_taskId, p_users, null);
        }
        
        /// <remarks/>
        public void taskReassignAsync(string p_accessToken, string p_taskId, string[] p_users, object userState) {
            if ((this.taskReassignOperationCompleted == null)) {
                this.taskReassignOperationCompleted = new System.Threading.SendOrPostCallback(this.OntaskReassignOperationCompleted);
            }
            this.InvokeAsync("taskReassign", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_users}, this.taskReassignOperationCompleted, userState);
        }
        
        private void OntaskReassignOperationCompleted(object arg) {
            if ((this.taskReassignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.taskReassignCompleted(this, new taskReassignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("jobsAddLanguagesReturn")]
        public string jobsAddLanguages(string p_accessToken, long p_jobId, string p_wfInfos) {
            object[] results = this.Invoke("jobsAddLanguages", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_wfInfos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void jobsAddLanguagesAsync(string p_accessToken, long p_jobId, string p_wfInfos) {
            this.jobsAddLanguagesAsync(p_accessToken, p_jobId, p_wfInfos, null);
        }
        
        /// <remarks/>
        public void jobsAddLanguagesAsync(string p_accessToken, long p_jobId, string p_wfInfos, object userState) {
            if ((this.jobsAddLanguagesOperationCompleted == null)) {
                this.jobsAddLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnjobsAddLanguagesOperationCompleted);
            }
            this.InvokeAsync("jobsAddLanguages", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_wfInfos}, this.jobsAddLanguagesOperationCompleted, userState);
        }
        
        private void OnjobsAddLanguagesOperationCompleted(object arg) {
            if ((this.jobsAddLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.jobsAddLanguagesCompleted(this, new jobsAddLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getWorkflowPathReturn")]
        public string getWorkflowPath(string p_accessToken, long workflowId) {
            object[] results = this.Invoke("getWorkflowPath", new object[] {
                        p_accessToken,
                        workflowId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowPathAsync(string p_accessToken, long workflowId) {
            this.getWorkflowPathAsync(p_accessToken, workflowId, null);
        }
        
        /// <remarks/>
        public void getWorkflowPathAsync(string p_accessToken, long workflowId, object userState) {
            if ((this.getWorkflowPathOperationCompleted == null)) {
                this.getWorkflowPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowPathOperationCompleted);
            }
            this.InvokeAsync("getWorkflowPath", new object[] {
                        p_accessToken,
                        workflowId}, this.getWorkflowPathOperationCompleted, userState);
        }
        
        private void OngetWorkflowPathOperationCompleted(object arg) {
            if ((this.getWorkflowPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowPathCompleted(this, new getWorkflowPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("createJobGroupReturn")]
        public string createJobGroup(string p_accessToken, string groupName, string projectName, string sourceLocale) {
            object[] results = this.Invoke("createJobGroup", new object[] {
                        p_accessToken,
                        groupName,
                        projectName,
                        sourceLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createJobGroupAsync(string p_accessToken, string groupName, string projectName, string sourceLocale) {
            this.createJobGroupAsync(p_accessToken, groupName, projectName, sourceLocale, null);
        }
        
        /// <remarks/>
        public void createJobGroupAsync(string p_accessToken, string groupName, string projectName, string sourceLocale, object userState) {
            if ((this.createJobGroupOperationCompleted == null)) {
                this.createJobGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateJobGroupOperationCompleted);
            }
            this.InvokeAsync("createJobGroup", new object[] {
                        p_accessToken,
                        groupName,
                        projectName,
                        sourceLocale}, this.createJobGroupOperationCompleted, userState);
        }
        
        private void OncreateJobGroupOperationCompleted(object arg) {
            if ((this.createJobGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createJobGroupCompleted(this, new createJobGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("addJobToGroupReturn")]
        public string addJobToGroup(string p_accessToken, string groupId, string jobId) {
            object[] results = this.Invoke("addJobToGroup", new object[] {
                        p_accessToken,
                        groupId,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addJobToGroupAsync(string p_accessToken, string groupId, string jobId) {
            this.addJobToGroupAsync(p_accessToken, groupId, jobId, null);
        }
        
        /// <remarks/>
        public void addJobToGroupAsync(string p_accessToken, string groupId, string jobId, object userState) {
            if ((this.addJobToGroupOperationCompleted == null)) {
                this.addJobToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddJobToGroupOperationCompleted);
            }
            this.InvokeAsync("addJobToGroup", new object[] {
                        p_accessToken,
                        groupId,
                        jobId}, this.addJobToGroupOperationCompleted, userState);
        }
        
        private void OnaddJobToGroupOperationCompleted(object arg) {
            if ((this.addJobToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addJobToGroupCompleted(this, new addJobToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportTMReturn")]
        public string exportTM(string p_accessToken, string p_tmName, string p_languages, string p_startDate, string p_finishDate, string p_exportFormat, string p_exportedFileName) {
            object[] results = this.Invoke("exportTM", new object[] {
                        p_accessToken,
                        p_tmName,
                        p_languages,
                        p_startDate,
                        p_finishDate,
                        p_exportFormat,
                        p_exportedFileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportTMAsync(string p_accessToken, string p_tmName, string p_languages, string p_startDate, string p_finishDate, string p_exportFormat, string p_exportedFileName) {
            this.exportTMAsync(p_accessToken, p_tmName, p_languages, p_startDate, p_finishDate, p_exportFormat, p_exportedFileName, null);
        }
        
        /// <remarks/>
        public void exportTMAsync(string p_accessToken, string p_tmName, string p_languages, string p_startDate, string p_finishDate, string p_exportFormat, string p_exportedFileName, object userState) {
            if ((this.exportTMOperationCompleted == null)) {
                this.exportTMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportTMOperationCompleted);
            }
            this.InvokeAsync("exportTM", new object[] {
                        p_accessToken,
                        p_tmName,
                        p_languages,
                        p_startDate,
                        p_finishDate,
                        p_exportFormat,
                        p_exportedFileName}, this.exportTMOperationCompleted, userState);
        }
        
        private void OnexportTMOperationCompleted(object arg) {
            if ((this.exportTMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportTMCompleted(this, new exportTMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("tmFullTextSearchReturn")]
        public string tmFullTextSearch(string p_accessToken, string p_string, string p_tmNames, string p_sourceLocale, string p_targetLocale, string p_dateType, string p_startDate, string p_finishDate, string p_companyName) {
            object[] results = this.Invoke("tmFullTextSearch", new object[] {
                        p_accessToken,
                        p_string,
                        p_tmNames,
                        p_sourceLocale,
                        p_targetLocale,
                        p_dateType,
                        p_startDate,
                        p_finishDate,
                        p_companyName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void tmFullTextSearchAsync(string p_accessToken, string p_string, string p_tmNames, string p_sourceLocale, string p_targetLocale, string p_dateType, string p_startDate, string p_finishDate, string p_companyName) {
            this.tmFullTextSearchAsync(p_accessToken, p_string, p_tmNames, p_sourceLocale, p_targetLocale, p_dateType, p_startDate, p_finishDate, p_companyName, null);
        }
        
        /// <remarks/>
        public void tmFullTextSearchAsync(string p_accessToken, string p_string, string p_tmNames, string p_sourceLocale, string p_targetLocale, string p_dateType, string p_startDate, string p_finishDate, string p_companyName, object userState) {
            if ((this.tmFullTextSearchOperationCompleted == null)) {
                this.tmFullTextSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OntmFullTextSearchOperationCompleted);
            }
            this.InvokeAsync("tmFullTextSearch", new object[] {
                        p_accessToken,
                        p_string,
                        p_tmNames,
                        p_sourceLocale,
                        p_targetLocale,
                        p_dateType,
                        p_startDate,
                        p_finishDate,
                        p_companyName}, this.tmFullTextSearchOperationCompleted, userState);
        }
        
        private void OntmFullTextSearchOperationCompleted(object arg) {
            if ((this.tmFullTextSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tmFullTextSearchCompleted(this, new tmFullTextSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCountsByJobStateReturn")]
        public string getCountsByJobState(string p_accessToken) {
            object[] results = this.Invoke("getCountsByJobState", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCountsByJobStateAsync(string p_accessToken) {
            this.getCountsByJobStateAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getCountsByJobStateAsync(string p_accessToken, object userState) {
            if ((this.getCountsByJobStateOperationCompleted == null)) {
                this.getCountsByJobStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountsByJobStateOperationCompleted);
            }
            this.InvokeAsync("getCountsByJobState", new object[] {
                        p_accessToken}, this.getCountsByJobStateOperationCompleted, userState);
        }
        
        private void OngetCountsByJobStateOperationCompleted(object arg) {
            if ((this.getCountsByJobStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountsByJobStateCompleted(this, new getCountsByJobStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getServerVersionReturn")]
        public string getServerVersion(string p_accessToken) {
            object[] results = this.Invoke("getServerVersion", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getServerVersionAsync(string p_accessToken) {
            this.getServerVersionAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getServerVersionAsync(string p_accessToken, object userState) {
            if ((this.getServerVersionOperationCompleted == null)) {
                this.getServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerVersionOperationCompleted);
            }
            this.InvokeAsync("getServerVersion", new object[] {
                        p_accessToken}, this.getServerVersionOperationCompleted, userState);
        }
        
        private void OngetServerVersionOperationCompleted(object arg) {
            if ((this.getServerVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerVersionCompleted(this, new getServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancelJobReturn")]
        public string cancelJob(string p_accessToken, string p_jobName) {
            object[] results = this.Invoke("cancelJob", new object[] {
                        p_accessToken,
                        p_jobName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelJobAsync(string p_accessToken, string p_jobName) {
            this.cancelJobAsync(p_accessToken, p_jobName, null);
        }
        
        /// <remarks/>
        public void cancelJobAsync(string p_accessToken, string p_jobName, object userState) {
            if ((this.cancelJobOperationCompleted == null)) {
                this.cancelJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelJobOperationCompleted);
            }
            this.InvokeAsync("cancelJob", new object[] {
                        p_accessToken,
                        p_jobName}, this.cancelJobOperationCompleted, userState);
        }
        
        private void OncancelJobOperationCompleted(object arg) {
            if ((this.cancelJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelJobCompleted(this, new cancelJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("archiveJobReturn")]
        public string archiveJob(string p_accessToken, string p_jobIds) {
            object[] results = this.Invoke("archiveJob", new object[] {
                        p_accessToken,
                        p_jobIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void archiveJobAsync(string p_accessToken, string p_jobIds) {
            this.archiveJobAsync(p_accessToken, p_jobIds, null);
        }
        
        /// <remarks/>
        public void archiveJobAsync(string p_accessToken, string p_jobIds, object userState) {
            if ((this.archiveJobOperationCompleted == null)) {
                this.archiveJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnarchiveJobOperationCompleted);
            }
            this.InvokeAsync("archiveJob", new object[] {
                        p_accessToken,
                        p_jobIds}, this.archiveJobOperationCompleted, userState);
        }
        
        private void OnarchiveJobOperationCompleted(object arg) {
            if ((this.archiveJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.archiveJobCompleted(this, new archiveJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void uploadFile(Map args) {
            this.Invoke("uploadFile", new object[] {
                        args});
        }
        
        /// <remarks/>
        public void uploadFileAsync(Map args) {
            this.uploadFileAsync(args, null);
        }
        
        /// <remarks/>
        public void uploadFileAsync(Map args, object userState) {
            if ((this.uploadFileOperationCompleted == null)) {
                this.uploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadFileOperationCompleted);
            }
            this.InvokeAsync("uploadFile", new object[] {
                        args}, this.uploadFileOperationCompleted, userState);
        }
        
        private void OnuploadFileOperationCompleted(object arg) {
            if ((this.uploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="uploadFile1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void uploadFile(string accessToken, string jobName, string filePath, string fileProfileId, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] content) {
            this.Invoke("uploadFile1", new object[] {
                        accessToken,
                        jobName,
                        filePath,
                        fileProfileId,
                        content});
        }
        
        /// <remarks/>
        public void uploadFile1Async(string accessToken, string jobName, string filePath, string fileProfileId, byte[] content) {
            this.uploadFile1Async(accessToken, jobName, filePath, fileProfileId, content, null);
        }
        
        /// <remarks/>
        public void uploadFile1Async(string accessToken, string jobName, string filePath, string fileProfileId, byte[] content, object userState) {
            if ((this.uploadFile1OperationCompleted == null)) {
                this.uploadFile1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadFile1OperationCompleted);
            }
            this.InvokeAsync("uploadFile1", new object[] {
                        accessToken,
                        jobName,
                        filePath,
                        fileProfileId,
                        content}, this.uploadFile1OperationCompleted, userState);
        }
        
        private void OnuploadFile1OperationCompleted(object arg) {
            if ((this.uploadFile1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadFile1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="uploadFile2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void uploadFile(string accessToken, string jobName, string filePath, string fileProfileId, string content) {
            this.Invoke("uploadFile2", new object[] {
                        accessToken,
                        jobName,
                        filePath,
                        fileProfileId,
                        content});
        }
        
        /// <remarks/>
        public void uploadFile2Async(string accessToken, string jobName, string filePath, string fileProfileId, string content) {
            this.uploadFile2Async(accessToken, jobName, filePath, fileProfileId, content, null);
        }
        
        /// <remarks/>
        public void uploadFile2Async(string accessToken, string jobName, string filePath, string fileProfileId, string content, object userState) {
            if ((this.uploadFile2OperationCompleted == null)) {
                this.uploadFile2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadFile2OperationCompleted);
            }
            this.InvokeAsync("uploadFile2", new object[] {
                        accessToken,
                        jobName,
                        filePath,
                        fileProfileId,
                        content}, this.uploadFile2OperationCompleted, userState);
        }
        
        private void OnuploadFile2OperationCompleted(object arg) {
            if ((this.uploadFile2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadFile2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("helloWorldReturn")]
        public string helloWorld() {
            object[] results = this.Invoke("helloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void helloWorldAsync() {
            this.helloWorldAsync(null);
        }
        
        /// <remarks/>
        public void helloWorldAsync(object userState) {
            if ((this.helloWorldOperationCompleted == null)) {
                this.helloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhelloWorldOperationCompleted);
            }
            this.InvokeAsync("helloWorld", new object[0], this.helloWorldOperationCompleted, userState);
        }
        
        private void OnhelloWorldOperationCompleted(object arg) {
            if ((this.helloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.helloWorldCompleted(this, new helloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void createJob(string accessToken, string jobName, string comment, string filePaths, string fileProfileIds, string targetLocales, string attributeXml) {
            this.Invoke("createJob", new object[] {
                        accessToken,
                        jobName,
                        comment,
                        filePaths,
                        fileProfileIds,
                        targetLocales,
                        attributeXml});
        }
        
        /// <remarks/>
        public void createJobAsync(string accessToken, string jobName, string comment, string filePaths, string fileProfileIds, string targetLocales, string attributeXml) {
            this.createJobAsync(accessToken, jobName, comment, filePaths, fileProfileIds, targetLocales, attributeXml, null);
        }
        
        /// <remarks/>
        public void createJobAsync(string accessToken, string jobName, string comment, string filePaths, string fileProfileIds, string targetLocales, string attributeXml, object userState) {
            if ((this.createJobOperationCompleted == null)) {
                this.createJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateJobOperationCompleted);
            }
            this.InvokeAsync("createJob", new object[] {
                        accessToken,
                        jobName,
                        comment,
                        filePaths,
                        fileProfileIds,
                        targetLocales,
                        attributeXml}, this.createJobOperationCompleted, userState);
        }
        
        private void OncreateJobOperationCompleted(object arg) {
            if ((this.createJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="createJob1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void createJob(Map args) {
            this.Invoke("createJob1", new object[] {
                        args});
        }
        
        /// <remarks/>
        public void createJob1Async(Map args) {
            this.createJob1Async(args, null);
        }
        
        /// <remarks/>
        public void createJob1Async(Map args, object userState) {
            if ((this.createJob1OperationCompleted == null)) {
                this.createJob1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateJob1OperationCompleted);
            }
            this.InvokeAsync("createJob1", new object[] {
                        args}, this.createJob1OperationCompleted, userState);
        }
        
        private void OncreateJob1OperationCompleted(object arg) {
            if ((this.createJob1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createJob1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="createJob2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void createJob(string accessToken, string jobName, string comment, string filePaths, string fileProfileIds, string targetLocales) {
            this.Invoke("createJob2", new object[] {
                        accessToken,
                        jobName,
                        comment,
                        filePaths,
                        fileProfileIds,
                        targetLocales});
        }
        
        /// <remarks/>
        public void createJob2Async(string accessToken, string jobName, string comment, string filePaths, string fileProfileIds, string targetLocales) {
            this.createJob2Async(accessToken, jobName, comment, filePaths, fileProfileIds, targetLocales, null);
        }
        
        /// <remarks/>
        public void createJob2Async(string accessToken, string jobName, string comment, string filePaths, string fileProfileIds, string targetLocales, object userState) {
            if ((this.createJob2OperationCompleted == null)) {
                this.createJob2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateJob2OperationCompleted);
            }
            this.InvokeAsync("createJob2", new object[] {
                        accessToken,
                        jobName,
                        comment,
                        filePaths,
                        fileProfileIds,
                        targetLocales}, this.createJob2OperationCompleted, userState);
        }
        
        private void OncreateJob2OperationCompleted(object arg) {
            if ((this.createJob2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createJob2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTargetLocalesReturn")]
        public string getTargetLocales(string p_accessToken, string p_sourceLocale) {
            object[] results = this.Invoke("getTargetLocales", new object[] {
                        p_accessToken,
                        p_sourceLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTargetLocalesAsync(string p_accessToken, string p_sourceLocale) {
            this.getTargetLocalesAsync(p_accessToken, p_sourceLocale, null);
        }
        
        /// <remarks/>
        public void getTargetLocalesAsync(string p_accessToken, string p_sourceLocale, object userState) {
            if ((this.getTargetLocalesOperationCompleted == null)) {
                this.getTargetLocalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTargetLocalesOperationCompleted);
            }
            this.InvokeAsync("getTargetLocales", new object[] {
                        p_accessToken,
                        p_sourceLocale}, this.getTargetLocalesOperationCompleted, userState);
        }
        
        private void OngetTargetLocalesOperationCompleted(object arg) {
            if ((this.getTargetLocalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTargetLocalesCompleted(this, new getTargetLocalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFileProfileInformationReturn")]
        public string getFileProfileInformation(string p_accessToken) {
            object[] results = this.Invoke("getFileProfileInformation", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFileProfileInformationAsync(string p_accessToken) {
            this.getFileProfileInformationAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getFileProfileInformationAsync(string p_accessToken, object userState) {
            if ((this.getFileProfileInformationOperationCompleted == null)) {
                this.getFileProfileInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFileProfileInformationOperationCompleted);
            }
            this.InvokeAsync("getFileProfileInformation", new object[] {
                        p_accessToken}, this.getFileProfileInformationOperationCompleted, userState);
        }
        
        private void OngetFileProfileInformationOperationCompleted(object arg) {
            if ((this.getFileProfileInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFileProfileInformationCompleted(this, new getFileProfileInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllActivityTypesReturn")]
        public string getAllActivityTypes(string p_accessToken) {
            object[] results = this.Invoke("getAllActivityTypes", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllActivityTypesAsync(string p_accessToken) {
            this.getAllActivityTypesAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllActivityTypesAsync(string p_accessToken, object userState) {
            if ((this.getAllActivityTypesOperationCompleted == null)) {
                this.getAllActivityTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllActivityTypesOperationCompleted);
            }
            this.InvokeAsync("getAllActivityTypes", new object[] {
                        p_accessToken}, this.getAllActivityTypesOperationCompleted, userState);
        }
        
        private void OngetAllActivityTypesOperationCompleted(object arg) {
            if ((this.getAllActivityTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllActivityTypesCompleted(this, new getAllActivityTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllLocalePairsReturn")]
        public string getAllLocalePairs(string p_accessToken) {
            object[] results = this.Invoke("getAllLocalePairs", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllLocalePairsAsync(string p_accessToken) {
            this.getAllLocalePairsAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllLocalePairsAsync(string p_accessToken, object userState) {
            if ((this.getAllLocalePairsOperationCompleted == null)) {
                this.getAllLocalePairsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllLocalePairsOperationCompleted);
            }
            this.InvokeAsync("getAllLocalePairs", new object[] {
                        p_accessToken}, this.getAllLocalePairsOperationCompleted, userState);
        }
        
        private void OngetAllLocalePairsOperationCompleted(object arg) {
            if ((this.getAllLocalePairsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllLocalePairsCompleted(this, new getAllLocalePairsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllProjectsByUserReturn")]
        public string getAllProjectsByUser(string p_accessToken) {
            object[] results = this.Invoke("getAllProjectsByUser", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllProjectsByUserAsync(string p_accessToken) {
            this.getAllProjectsByUserAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllProjectsByUserAsync(string p_accessToken, object userState) {
            if ((this.getAllProjectsByUserOperationCompleted == null)) {
                this.getAllProjectsByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProjectsByUserOperationCompleted);
            }
            this.InvokeAsync("getAllProjectsByUser", new object[] {
                        p_accessToken}, this.getAllProjectsByUserOperationCompleted, userState);
        }
        
        private void OngetAllProjectsByUserOperationCompleted(object arg) {
            if ((this.getAllProjectsByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProjectsByUserCompleted(this, new getAllProjectsByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void createJobOnInitial(Map args) {
            this.Invoke("createJobOnInitial", new object[] {
                        args});
        }
        
        /// <remarks/>
        public void createJobOnInitialAsync(Map args) {
            this.createJobOnInitialAsync(args, null);
        }
        
        /// <remarks/>
        public void createJobOnInitialAsync(Map args, object userState) {
            if ((this.createJobOnInitialOperationCompleted == null)) {
                this.createJobOnInitialOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateJobOnInitialOperationCompleted);
            }
            this.InvokeAsync("createJobOnInitial", new object[] {
                        args}, this.createJobOnInitialOperationCompleted, userState);
        }
        
        private void OncreateJobOnInitialOperationCompleted(object arg) {
            if ((this.createJobOnInitialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createJobOnInitialCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("uploadFileForInitialReturn")]
        public string uploadFileForInitial(Map args) {
            object[] results = this.Invoke("uploadFileForInitial", new object[] {
                        args});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadFileForInitialAsync(Map args) {
            this.uploadFileForInitialAsync(args, null);
        }
        
        /// <remarks/>
        public void uploadFileForInitialAsync(Map args, object userState) {
            if ((this.uploadFileForInitialOperationCompleted == null)) {
                this.uploadFileForInitialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadFileForInitialOperationCompleted);
            }
            this.InvokeAsync("uploadFileForInitial", new object[] {
                        args}, this.uploadFileForInitialOperationCompleted, userState);
        }
        
        private void OnuploadFileForInitialOperationCompleted(object arg) {
            if ((this.uploadFileForInitialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadFileForInitialCompleted(this, new uploadFileForInitialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getJobAndWorkflowInfoReturn")]
        public string getJobAndWorkflowInfo(string p_accessToken, long p_jobId) {
            object[] results = this.Invoke("getJobAndWorkflowInfo", new object[] {
                        p_accessToken,
                        p_jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJobAndWorkflowInfoAsync(string p_accessToken, long p_jobId) {
            this.getJobAndWorkflowInfoAsync(p_accessToken, p_jobId, null);
        }
        
        /// <remarks/>
        public void getJobAndWorkflowInfoAsync(string p_accessToken, long p_jobId, object userState) {
            if ((this.getJobAndWorkflowInfoOperationCompleted == null)) {
                this.getJobAndWorkflowInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobAndWorkflowInfoOperationCompleted);
            }
            this.InvokeAsync("getJobAndWorkflowInfo", new object[] {
                        p_accessToken,
                        p_jobId}, this.getJobAndWorkflowInfoOperationCompleted, userState);
        }
        
        private void OngetJobAndWorkflowInfoOperationCompleted(object arg) {
            if ((this.getJobAndWorkflowInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobAndWorkflowInfoCompleted(this, new getJobAndWorkflowInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("acceptTaskReturn")]
        public string acceptTask(string p_accessToken, string p_taskId) {
            object[] results = this.Invoke("acceptTask", new object[] {
                        p_accessToken,
                        p_taskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void acceptTaskAsync(string p_accessToken, string p_taskId) {
            this.acceptTaskAsync(p_accessToken, p_taskId, null);
        }
        
        /// <remarks/>
        public void acceptTaskAsync(string p_accessToken, string p_taskId, object userState) {
            if ((this.acceptTaskOperationCompleted == null)) {
                this.acceptTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacceptTaskOperationCompleted);
            }
            this.InvokeAsync("acceptTask", new object[] {
                        p_accessToken,
                        p_taskId}, this.acceptTaskOperationCompleted, userState);
        }
        
        private void OnacceptTaskOperationCompleted(object arg) {
            if ((this.acceptTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acceptTaskCompleted(this, new acceptTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("rejectTaskReturn")]
        public string rejectTask(string p_accessToken, string p_taskId, string p_rejectComment) {
            object[] results = this.Invoke("rejectTask", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_rejectComment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rejectTaskAsync(string p_accessToken, string p_taskId, string p_rejectComment) {
            this.rejectTaskAsync(p_accessToken, p_taskId, p_rejectComment, null);
        }
        
        /// <remarks/>
        public void rejectTaskAsync(string p_accessToken, string p_taskId, string p_rejectComment, object userState) {
            if ((this.rejectTaskOperationCompleted == null)) {
                this.rejectTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrejectTaskOperationCompleted);
            }
            this.InvokeAsync("rejectTask", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_rejectComment}, this.rejectTaskOperationCompleted, userState);
        }
        
        private void OnrejectTaskOperationCompleted(object arg) {
            if ((this.rejectTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rejectTaskCompleted(this, new rejectTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("createUserReturn")]
        public int createUser(string p_accessToken, string p_userId, string p_password, string p_firstName, string p_lastName, string p_email, string[] p_permissionGrps, string p_status, string p_roles, bool p_isInAllProject, string[] p_projectIds) {
            object[] results = this.Invoke("createUser", new object[] {
                        p_accessToken,
                        p_userId,
                        p_password,
                        p_firstName,
                        p_lastName,
                        p_email,
                        p_permissionGrps,
                        p_status,
                        p_roles,
                        p_isInAllProject,
                        p_projectIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createUserAsync(string p_accessToken, string p_userId, string p_password, string p_firstName, string p_lastName, string p_email, string[] p_permissionGrps, string p_status, string p_roles, bool p_isInAllProject, string[] p_projectIds) {
            this.createUserAsync(p_accessToken, p_userId, p_password, p_firstName, p_lastName, p_email, p_permissionGrps, p_status, p_roles, p_isInAllProject, p_projectIds, null);
        }
        
        /// <remarks/>
        public void createUserAsync(string p_accessToken, string p_userId, string p_password, string p_firstName, string p_lastName, string p_email, string[] p_permissionGrps, string p_status, string p_roles, bool p_isInAllProject, string[] p_projectIds, object userState) {
            if ((this.createUserOperationCompleted == null)) {
                this.createUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateUserOperationCompleted);
            }
            this.InvokeAsync("createUser", new object[] {
                        p_accessToken,
                        p_userId,
                        p_password,
                        p_firstName,
                        p_lastName,
                        p_email,
                        p_permissionGrps,
                        p_status,
                        p_roles,
                        p_isInAllProject,
                        p_projectIds}, this.createUserOperationCompleted, userState);
        }
        
        private void OncreateUserOperationCompleted(object arg) {
            if ((this.createUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createUserCompleted(this, new createUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("modifyUserReturn")]
        public int modifyUser(string p_accessToken, string p_userId, string p_password, string p_firstName, string p_lastName, string p_email, string[] p_permissionGrps, string p_status, string p_roles, bool p_isInAllProject, string[] p_projectIds) {
            object[] results = this.Invoke("modifyUser", new object[] {
                        p_accessToken,
                        p_userId,
                        p_password,
                        p_firstName,
                        p_lastName,
                        p_email,
                        p_permissionGrps,
                        p_status,
                        p_roles,
                        p_isInAllProject,
                        p_projectIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void modifyUserAsync(string p_accessToken, string p_userId, string p_password, string p_firstName, string p_lastName, string p_email, string[] p_permissionGrps, string p_status, string p_roles, bool p_isInAllProject, string[] p_projectIds) {
            this.modifyUserAsync(p_accessToken, p_userId, p_password, p_firstName, p_lastName, p_email, p_permissionGrps, p_status, p_roles, p_isInAllProject, p_projectIds, null);
        }
        
        /// <remarks/>
        public void modifyUserAsync(string p_accessToken, string p_userId, string p_password, string p_firstName, string p_lastName, string p_email, string[] p_permissionGrps, string p_status, string p_roles, bool p_isInAllProject, string[] p_projectIds, object userState) {
            if ((this.modifyUserOperationCompleted == null)) {
                this.modifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyUserOperationCompleted);
            }
            this.InvokeAsync("modifyUser", new object[] {
                        p_accessToken,
                        p_userId,
                        p_password,
                        p_firstName,
                        p_lastName,
                        p_email,
                        p_permissionGrps,
                        p_status,
                        p_roles,
                        p_isInAllProject,
                        p_projectIds}, this.modifyUserOperationCompleted, userState);
        }
        
        private void OnmodifyUserOperationCompleted(object arg) {
            if ((this.modifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyUserCompleted(this, new modifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("addJobCommentReturn")]
        public string addJobComment(string p_accessToken, string p_jobName, string p_userId, string p_comment, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] p_file, string p_fileName, string p_access) {
            object[] results = this.Invoke("addJobComment", new object[] {
                        p_accessToken,
                        p_jobName,
                        p_userId,
                        p_comment,
                        p_file,
                        p_fileName,
                        p_access});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addJobCommentAsync(string p_accessToken, string p_jobName, string p_userId, string p_comment, byte[] p_file, string p_fileName, string p_access) {
            this.addJobCommentAsync(p_accessToken, p_jobName, p_userId, p_comment, p_file, p_fileName, p_access, null);
        }
        
        /// <remarks/>
        public void addJobCommentAsync(string p_accessToken, string p_jobName, string p_userId, string p_comment, byte[] p_file, string p_fileName, string p_access, object userState) {
            if ((this.addJobCommentOperationCompleted == null)) {
                this.addJobCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddJobCommentOperationCompleted);
            }
            this.InvokeAsync("addJobComment", new object[] {
                        p_accessToken,
                        p_jobName,
                        p_userId,
                        p_comment,
                        p_file,
                        p_fileName,
                        p_access}, this.addJobCommentOperationCompleted, userState);
        }
        
        private void OnaddJobCommentOperationCompleted(object arg) {
            if ((this.addJobCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addJobCommentCompleted(this, new addJobCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("isSupportCurrentLocalePairReturn")]
        public string isSupportCurrentLocalePair(string p_accessToken, string p_fileProfileId, string p_srcLangCountry, string p_trgLangCountry) {
            object[] results = this.Invoke("isSupportCurrentLocalePair", new object[] {
                        p_accessToken,
                        p_fileProfileId,
                        p_srcLangCountry,
                        p_trgLangCountry});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isSupportCurrentLocalePairAsync(string p_accessToken, string p_fileProfileId, string p_srcLangCountry, string p_trgLangCountry) {
            this.isSupportCurrentLocalePairAsync(p_accessToken, p_fileProfileId, p_srcLangCountry, p_trgLangCountry, null);
        }
        
        /// <remarks/>
        public void isSupportCurrentLocalePairAsync(string p_accessToken, string p_fileProfileId, string p_srcLangCountry, string p_trgLangCountry, object userState) {
            if ((this.isSupportCurrentLocalePairOperationCompleted == null)) {
                this.isSupportCurrentLocalePairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisSupportCurrentLocalePairOperationCompleted);
            }
            this.InvokeAsync("isSupportCurrentLocalePair", new object[] {
                        p_accessToken,
                        p_fileProfileId,
                        p_srcLangCountry,
                        p_trgLangCountry}, this.isSupportCurrentLocalePairOperationCompleted, userState);
        }
        
        private void OnisSupportCurrentLocalePairOperationCompleted(object arg) {
            if ((this.isSupportCurrentLocalePairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isSupportCurrentLocalePairCompleted(this, new isSupportCurrentLocalePairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("uploadOriginalSourceFileReturn")]
        public string uploadOriginalSourceFile(Map args) {
            object[] results = this.Invoke("uploadOriginalSourceFile", new object[] {
                        args});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadOriginalSourceFileAsync(Map args) {
            this.uploadOriginalSourceFileAsync(args, null);
        }
        
        /// <remarks/>
        public void uploadOriginalSourceFileAsync(Map args, object userState) {
            if ((this.uploadOriginalSourceFileOperationCompleted == null)) {
                this.uploadOriginalSourceFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadOriginalSourceFileOperationCompleted);
            }
            this.InvokeAsync("uploadOriginalSourceFile", new object[] {
                        args}, this.uploadOriginalSourceFileOperationCompleted, userState);
        }
        
        private void OnuploadOriginalSourceFileOperationCompleted(object arg) {
            if ((this.uploadOriginalSourceFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadOriginalSourceFileCompleted(this, new uploadOriginalSourceFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void sendSegmentCommentBack(string p_accessToken, Map p_segmentComments) {
            this.Invoke("sendSegmentCommentBack", new object[] {
                        p_accessToken,
                        p_segmentComments});
        }
        
        /// <remarks/>
        public void sendSegmentCommentBackAsync(string p_accessToken, Map p_segmentComments) {
            this.sendSegmentCommentBackAsync(p_accessToken, p_segmentComments, null);
        }
        
        /// <remarks/>
        public void sendSegmentCommentBackAsync(string p_accessToken, Map p_segmentComments, object userState) {
            if ((this.sendSegmentCommentBackOperationCompleted == null)) {
                this.sendSegmentCommentBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSegmentCommentBackOperationCompleted);
            }
            this.InvokeAsync("sendSegmentCommentBack", new object[] {
                        p_accessToken,
                        p_segmentComments}, this.sendSegmentCommentBackOperationCompleted, userState);
        }
        
        private void OnsendSegmentCommentBackOperationCompleted(object arg) {
            if ((this.sendSegmentCommentBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSegmentCommentBackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("uploadEditionFileBackReturn")]
        public string uploadEditionFileBack(string p_accessToken, string p_originalTaskId, string p_fileName, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] p_bytes) {
            object[] results = this.Invoke("uploadEditionFileBack", new object[] {
                        p_accessToken,
                        p_originalTaskId,
                        p_fileName,
                        p_bytes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadEditionFileBackAsync(string p_accessToken, string p_originalTaskId, string p_fileName, byte[] p_bytes) {
            this.uploadEditionFileBackAsync(p_accessToken, p_originalTaskId, p_fileName, p_bytes, null);
        }
        
        /// <remarks/>
        public void uploadEditionFileBackAsync(string p_accessToken, string p_originalTaskId, string p_fileName, byte[] p_bytes, object userState) {
            if ((this.uploadEditionFileBackOperationCompleted == null)) {
                this.uploadEditionFileBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadEditionFileBackOperationCompleted);
            }
            this.InvokeAsync("uploadEditionFileBack", new object[] {
                        p_accessToken,
                        p_originalTaskId,
                        p_fileName,
                        p_bytes}, this.uploadEditionFileBackOperationCompleted, userState);
        }
        
        private void OnuploadEditionFileBackOperationCompleted(object arg) {
            if ((this.uploadEditionFileBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadEditionFileBackCompleted(this, new uploadEditionFileBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("importOfflineTargetFilesReturn")]
        public string importOfflineTargetFiles(string p_accessToken, string p_originalTaskId) {
            object[] results = this.Invoke("importOfflineTargetFiles", new object[] {
                        p_accessToken,
                        p_originalTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void importOfflineTargetFilesAsync(string p_accessToken, string p_originalTaskId) {
            this.importOfflineTargetFilesAsync(p_accessToken, p_originalTaskId, null);
        }
        
        /// <remarks/>
        public void importOfflineTargetFilesAsync(string p_accessToken, string p_originalTaskId, object userState) {
            if ((this.importOfflineTargetFilesOperationCompleted == null)) {
                this.importOfflineTargetFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportOfflineTargetFilesOperationCompleted);
            }
            this.InvokeAsync("importOfflineTargetFiles", new object[] {
                        p_accessToken,
                        p_originalTaskId}, this.importOfflineTargetFilesOperationCompleted, userState);
        }
        
        private void OnimportOfflineTargetFilesOperationCompleted(object arg) {
            if ((this.importOfflineTargetFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importOfflineTargetFilesCompleted(this, new importOfflineTargetFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getJobExportFilesReturn")]
        public string getJobExportFiles(string p_accessToken, string p_jobName) {
            object[] results = this.Invoke("getJobExportFiles", new object[] {
                        p_accessToken,
                        p_jobName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJobExportFilesAsync(string p_accessToken, string p_jobName) {
            this.getJobExportFilesAsync(p_accessToken, p_jobName, null);
        }
        
        /// <remarks/>
        public void getJobExportFilesAsync(string p_accessToken, string p_jobName, object userState) {
            if ((this.getJobExportFilesOperationCompleted == null)) {
                this.getJobExportFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobExportFilesOperationCompleted);
            }
            this.InvokeAsync("getJobExportFiles", new object[] {
                        p_accessToken,
                        p_jobName}, this.getJobExportFilesOperationCompleted, userState);
        }
        
        private void OngetJobExportFilesOperationCompleted(object arg) {
            if ((this.getJobExportFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobExportFilesCompleted(this, new getJobExportFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancelWorkflowReturn")]
        public string cancelWorkflow(string p_accessToken, string p_jobName, string p_workflowLocale) {
            object[] results = this.Invoke("cancelWorkflow", new object[] {
                        p_accessToken,
                        p_jobName,
                        p_workflowLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelWorkflowAsync(string p_accessToken, string p_jobName, string p_workflowLocale) {
            this.cancelWorkflowAsync(p_accessToken, p_jobName, p_workflowLocale, null);
        }
        
        /// <remarks/>
        public void cancelWorkflowAsync(string p_accessToken, string p_jobName, string p_workflowLocale, object userState) {
            if ((this.cancelWorkflowOperationCompleted == null)) {
                this.cancelWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelWorkflowOperationCompleted);
            }
            this.InvokeAsync("cancelWorkflow", new object[] {
                        p_accessToken,
                        p_jobName,
                        p_workflowLocale}, this.cancelWorkflowOperationCompleted, userState);
        }
        
        private void OncancelWorkflowOperationCompleted(object arg) {
            if ((this.cancelWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelWorkflowCompleted(this, new cancelWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("isInstalledReturn")]
        public bool isInstalled() {
            object[] results = this.Invoke("isInstalled", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isInstalledAsync() {
            this.isInstalledAsync(null);
        }
        
        /// <remarks/>
        public void isInstalledAsync(object userState) {
            if ((this.isInstalledOperationCompleted == null)) {
                this.isInstalledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisInstalledOperationCompleted);
            }
            this.InvokeAsync("isInstalled", new object[0], this.isInstalledOperationCompleted, userState);
        }
        
        private void OnisInstalledOperationCompleted(object arg) {
            if ((this.isInstalledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isInstalledCompleted(this, new isInstalledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void updateTaskState(string p_accessToken, string p_taskId, string p_state) {
            this.Invoke("updateTaskState", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_state});
        }
        
        /// <remarks/>
        public void updateTaskStateAsync(string p_accessToken, string p_taskId, string p_state) {
            this.updateTaskStateAsync(p_accessToken, p_taskId, p_state, null);
        }
        
        /// <remarks/>
        public void updateTaskStateAsync(string p_accessToken, string p_taskId, string p_state, object userState) {
            if ((this.updateTaskStateOperationCompleted == null)) {
                this.updateTaskStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTaskStateOperationCompleted);
            }
            this.InvokeAsync("updateTaskState", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_state}, this.updateTaskStateOperationCompleted, userState);
        }
        
        private void OnupdateTaskStateOperationCompleted(object arg) {
            if ((this.updateTaskStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTaskStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getJobExportWorkflowFilesReturn")]
        public string getJobExportWorkflowFiles(string p_accessToken, string p_jobName, string workflowLocale) {
            object[] results = this.Invoke("getJobExportWorkflowFiles", new object[] {
                        p_accessToken,
                        p_jobName,
                        workflowLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJobExportWorkflowFilesAsync(string p_accessToken, string p_jobName, string workflowLocale) {
            this.getJobExportWorkflowFilesAsync(p_accessToken, p_jobName, workflowLocale, null);
        }
        
        /// <remarks/>
        public void getJobExportWorkflowFilesAsync(string p_accessToken, string p_jobName, string workflowLocale, object userState) {
            if ((this.getJobExportWorkflowFilesOperationCompleted == null)) {
                this.getJobExportWorkflowFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobExportWorkflowFilesOperationCompleted);
            }
            this.InvokeAsync("getJobExportWorkflowFiles", new object[] {
                        p_accessToken,
                        p_jobName,
                        workflowLocale}, this.getJobExportWorkflowFilesOperationCompleted, userState);
        }
        
        private void OngetJobExportWorkflowFilesOperationCompleted(object arg) {
            if ((this.getJobExportWorkflowFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobExportWorkflowFilesCompleted(this, new getJobExportWorkflowFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLocalizedDocumentsReturn")]
        public string getLocalizedDocuments(string p_accessToken, string p_jobName, string p_wfId) {
            object[] results = this.Invoke("getLocalizedDocuments", new object[] {
                        p_accessToken,
                        p_jobName,
                        p_wfId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLocalizedDocumentsAsync(string p_accessToken, string p_jobName, string p_wfId) {
            this.getLocalizedDocumentsAsync(p_accessToken, p_jobName, p_wfId, null);
        }
        
        /// <remarks/>
        public void getLocalizedDocumentsAsync(string p_accessToken, string p_jobName, string p_wfId, object userState) {
            if ((this.getLocalizedDocumentsOperationCompleted == null)) {
                this.getLocalizedDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocalizedDocumentsOperationCompleted);
            }
            this.InvokeAsync("getLocalizedDocuments", new object[] {
                        p_accessToken,
                        p_jobName,
                        p_wfId}, this.getLocalizedDocumentsOperationCompleted, userState);
        }
        
        private void OngetLocalizedDocumentsOperationCompleted(object arg) {
            if ((this.getLocalizedDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocalizedDocumentsCompleted(this, new getLocalizedDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="getLocalizedDocuments1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLocalizedDocumentsReturn")]
        public string getLocalizedDocuments(string p_accessToken, string p_jobName) {
            object[] results = this.Invoke("getLocalizedDocuments1", new object[] {
                        p_accessToken,
                        p_jobName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLocalizedDocuments1Async(string p_accessToken, string p_jobName) {
            this.getLocalizedDocuments1Async(p_accessToken, p_jobName, null);
        }
        
        /// <remarks/>
        public void getLocalizedDocuments1Async(string p_accessToken, string p_jobName, object userState) {
            if ((this.getLocalizedDocuments1OperationCompleted == null)) {
                this.getLocalizedDocuments1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocalizedDocuments1OperationCompleted);
            }
            this.InvokeAsync("getLocalizedDocuments1", new object[] {
                        p_accessToken,
                        p_jobName}, this.getLocalizedDocuments1OperationCompleted, userState);
        }
        
        private void OngetLocalizedDocuments1OperationCompleted(object arg) {
            if ((this.getLocalizedDocuments1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocalizedDocuments1Completed(this, new getLocalizedDocuments1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLocalizedDocuments_oldReturn")]
        public string getLocalizedDocuments_old(string p_accessToken, string p_jobName) {
            object[] results = this.Invoke("getLocalizedDocuments_old", new object[] {
                        p_accessToken,
                        p_jobName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLocalizedDocuments_oldAsync(string p_accessToken, string p_jobName) {
            this.getLocalizedDocuments_oldAsync(p_accessToken, p_jobName, null);
        }
        
        /// <remarks/>
        public void getLocalizedDocuments_oldAsync(string p_accessToken, string p_jobName, object userState) {
            if ((this.getLocalizedDocuments_oldOperationCompleted == null)) {
                this.getLocalizedDocuments_oldOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocalizedDocuments_oldOperationCompleted);
            }
            this.InvokeAsync("getLocalizedDocuments_old", new object[] {
                        p_accessToken,
                        p_jobName}, this.getLocalizedDocuments_oldOperationCompleted, userState);
        }
        
        private void OngetLocalizedDocuments_oldOperationCompleted(object arg) {
            if ((this.getLocalizedDocuments_oldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocalizedDocuments_oldCompleted(this, new getLocalizedDocuments_oldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getImportExportStatusReturn")]
        public string getImportExportStatus(string p_accessToken) {
            object[] results = this.Invoke("getImportExportStatus", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getImportExportStatusAsync(string p_accessToken) {
            this.getImportExportStatusAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getImportExportStatusAsync(string p_accessToken, object userState) {
            if ((this.getImportExportStatusOperationCompleted == null)) {
                this.getImportExportStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImportExportStatusOperationCompleted);
            }
            this.InvokeAsync("getImportExportStatus", new object[] {
                        p_accessToken}, this.getImportExportStatusOperationCompleted, userState);
        }
        
        private void OngetImportExportStatusOperationCompleted(object arg) {
            if ((this.getImportExportStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImportExportStatusCompleted(this, new getImportExportStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAcceptedTasksInWorkflowReturn")]
        public string getAcceptedTasksInWorkflow(string p_accessToken, long p_workflowId) {
            object[] results = this.Invoke("getAcceptedTasksInWorkflow", new object[] {
                        p_accessToken,
                        p_workflowId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAcceptedTasksInWorkflowAsync(string p_accessToken, long p_workflowId) {
            this.getAcceptedTasksInWorkflowAsync(p_accessToken, p_workflowId, null);
        }
        
        /// <remarks/>
        public void getAcceptedTasksInWorkflowAsync(string p_accessToken, long p_workflowId, object userState) {
            if ((this.getAcceptedTasksInWorkflowOperationCompleted == null)) {
                this.getAcceptedTasksInWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAcceptedTasksInWorkflowOperationCompleted);
            }
            this.InvokeAsync("getAcceptedTasksInWorkflow", new object[] {
                        p_accessToken,
                        p_workflowId}, this.getAcceptedTasksInWorkflowOperationCompleted, userState);
        }
        
        private void OngetAcceptedTasksInWorkflowOperationCompleted(object arg) {
            if ((this.getAcceptedTasksInWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAcceptedTasksInWorkflowCompleted(this, new getAcceptedTasksInWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCurrentTasksInWorkflowReturn")]
        public string getCurrentTasksInWorkflow(string p_accessToken, long p_workflowId) {
            object[] results = this.Invoke("getCurrentTasksInWorkflow", new object[] {
                        p_accessToken,
                        p_workflowId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentTasksInWorkflowAsync(string p_accessToken, long p_workflowId) {
            this.getCurrentTasksInWorkflowAsync(p_accessToken, p_workflowId, null);
        }
        
        /// <remarks/>
        public void getCurrentTasksInWorkflowAsync(string p_accessToken, long p_workflowId, object userState) {
            if ((this.getCurrentTasksInWorkflowOperationCompleted == null)) {
                this.getCurrentTasksInWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentTasksInWorkflowOperationCompleted);
            }
            this.InvokeAsync("getCurrentTasksInWorkflow", new object[] {
                        p_accessToken,
                        p_workflowId}, this.getCurrentTasksInWorkflowOperationCompleted, userState);
        }
        
        private void OngetCurrentTasksInWorkflowOperationCompleted(object arg) {
            if ((this.getCurrentTasksInWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentTasksInWorkflowCompleted(this, new getCurrentTasksInWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserUnavailabilityReportReturn")]
        public string getUserUnavailabilityReport(string p_accessToken, string p_activityName, string p_sourceLocale, string p_targetLocale, int p_month, int p_year) {
            object[] results = this.Invoke("getUserUnavailabilityReport", new object[] {
                        p_accessToken,
                        p_activityName,
                        p_sourceLocale,
                        p_targetLocale,
                        p_month,
                        p_year});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserUnavailabilityReportAsync(string p_accessToken, string p_activityName, string p_sourceLocale, string p_targetLocale, int p_month, int p_year) {
            this.getUserUnavailabilityReportAsync(p_accessToken, p_activityName, p_sourceLocale, p_targetLocale, p_month, p_year, null);
        }
        
        /// <remarks/>
        public void getUserUnavailabilityReportAsync(string p_accessToken, string p_activityName, string p_sourceLocale, string p_targetLocale, int p_month, int p_year, object userState) {
            if ((this.getUserUnavailabilityReportOperationCompleted == null)) {
                this.getUserUnavailabilityReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserUnavailabilityReportOperationCompleted);
            }
            this.InvokeAsync("getUserUnavailabilityReport", new object[] {
                        p_accessToken,
                        p_activityName,
                        p_sourceLocale,
                        p_targetLocale,
                        p_month,
                        p_year}, this.getUserUnavailabilityReportOperationCompleted, userState);
        }
        
        private void OngetUserUnavailabilityReportOperationCompleted(object arg) {
            if ((this.getUserUnavailabilityReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserUnavailabilityReportCompleted(this, new getUserUnavailabilityReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFileProfileInfoExReturn")]
        public string getFileProfileInfoEx(string p_accessToken) {
            object[] results = this.Invoke("getFileProfileInfoEx", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFileProfileInfoExAsync(string p_accessToken) {
            this.getFileProfileInfoExAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getFileProfileInfoExAsync(string p_accessToken, object userState) {
            if ((this.getFileProfileInfoExOperationCompleted == null)) {
                this.getFileProfileInfoExOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFileProfileInfoExOperationCompleted);
            }
            this.InvokeAsync("getFileProfileInfoEx", new object[] {
                        p_accessToken}, this.getFileProfileInfoExOperationCompleted, userState);
        }
        
        private void OngetFileProfileInfoExOperationCompleted(object arg) {
            if ((this.getFileProfileInfoExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFileProfileInfoExCompleted(this, new getFileProfileInfoExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void createDocumentumJob(string p_accessToken, string jobName, string fileProfileId, string objectId, string userId) {
            this.Invoke("createDocumentumJob", new object[] {
                        p_accessToken,
                        jobName,
                        fileProfileId,
                        objectId,
                        userId});
        }
        
        /// <remarks/>
        public void createDocumentumJobAsync(string p_accessToken, string jobName, string fileProfileId, string objectId, string userId) {
            this.createDocumentumJobAsync(p_accessToken, jobName, fileProfileId, objectId, userId, null);
        }
        
        /// <remarks/>
        public void createDocumentumJobAsync(string p_accessToken, string jobName, string fileProfileId, string objectId, string userId, object userState) {
            if ((this.createDocumentumJobOperationCompleted == null)) {
                this.createDocumentumJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDocumentumJobOperationCompleted);
            }
            this.InvokeAsync("createDocumentumJob", new object[] {
                        p_accessToken,
                        jobName,
                        fileProfileId,
                        objectId,
                        userId}, this.createDocumentumJobOperationCompleted, userState);
        }
        
        private void OncreateDocumentumJobOperationCompleted(object arg) {
            if ((this.createDocumentumJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDocumentumJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void cancelDocumentumJob(string p_accessToken, string objectId, string jobId, string userId) {
            this.Invoke("cancelDocumentumJob", new object[] {
                        p_accessToken,
                        objectId,
                        jobId,
                        userId});
        }
        
        /// <remarks/>
        public void cancelDocumentumJobAsync(string p_accessToken, string objectId, string jobId, string userId) {
            this.cancelDocumentumJobAsync(p_accessToken, objectId, jobId, userId, null);
        }
        
        /// <remarks/>
        public void cancelDocumentumJobAsync(string p_accessToken, string objectId, string jobId, string userId, object userState) {
            if ((this.cancelDocumentumJobOperationCompleted == null)) {
                this.cancelDocumentumJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelDocumentumJobOperationCompleted);
            }
            this.InvokeAsync("cancelDocumentumJob", new object[] {
                        p_accessToken,
                        objectId,
                        jobId,
                        userId}, this.cancelDocumentumJobOperationCompleted, userState);
        }
        
        private void OncancelDocumentumJobOperationCompleted(object arg) {
            if ((this.cancelDocumentumJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelDocumentumJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDownloadableJobsReturn")]
        public string getDownloadableJobs(string p_accessToken, string p_msg) {
            object[] results = this.Invoke("getDownloadableJobs", new object[] {
                        p_accessToken,
                        p_msg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDownloadableJobsAsync(string p_accessToken, string p_msg) {
            this.getDownloadableJobsAsync(p_accessToken, p_msg, null);
        }
        
        /// <remarks/>
        public void getDownloadableJobsAsync(string p_accessToken, string p_msg, object userState) {
            if ((this.getDownloadableJobsOperationCompleted == null)) {
                this.getDownloadableJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDownloadableJobsOperationCompleted);
            }
            this.InvokeAsync("getDownloadableJobs", new object[] {
                        p_accessToken,
                        p_msg}, this.getDownloadableJobsOperationCompleted, userState);
        }
        
        private void OngetDownloadableJobsOperationCompleted(object arg) {
            if ((this.getDownloadableJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDownloadableJobsCompleted(this, new getDownloadableJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchEntriesInBatchReturn")]
        public Map searchEntriesInBatch(string p_accessToken, long p_remoteTmProfileId, Map p_segmentMap, long p_sourceLocaleId, Map p_btrgLocal2LevLocalesMap, bool p_translatable, bool p_escapeString) {
            object[] results = this.Invoke("searchEntriesInBatch", new object[] {
                        p_accessToken,
                        p_remoteTmProfileId,
                        p_segmentMap,
                        p_sourceLocaleId,
                        p_btrgLocal2LevLocalesMap,
                        p_translatable,
                        p_escapeString});
            return ((Map)(results[0]));
        }
        
        /// <remarks/>
        public void searchEntriesInBatchAsync(string p_accessToken, long p_remoteTmProfileId, Map p_segmentMap, long p_sourceLocaleId, Map p_btrgLocal2LevLocalesMap, bool p_translatable, bool p_escapeString) {
            this.searchEntriesInBatchAsync(p_accessToken, p_remoteTmProfileId, p_segmentMap, p_sourceLocaleId, p_btrgLocal2LevLocalesMap, p_translatable, p_escapeString, null);
        }
        
        /// <remarks/>
        public void searchEntriesInBatchAsync(string p_accessToken, long p_remoteTmProfileId, Map p_segmentMap, long p_sourceLocaleId, Map p_btrgLocal2LevLocalesMap, bool p_translatable, bool p_escapeString, object userState) {
            if ((this.searchEntriesInBatchOperationCompleted == null)) {
                this.searchEntriesInBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchEntriesInBatchOperationCompleted);
            }
            this.InvokeAsync("searchEntriesInBatch", new object[] {
                        p_accessToken,
                        p_remoteTmProfileId,
                        p_segmentMap,
                        p_sourceLocaleId,
                        p_btrgLocal2LevLocalesMap,
                        p_translatable,
                        p_escapeString}, this.searchEntriesInBatchOperationCompleted, userState);
        }
        
        private void OnsearchEntriesInBatchOperationCompleted(object arg) {
            if ((this.searchEntriesInBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchEntriesInBatchCompleted(this, new searchEntriesInBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllPermissionsByUserReturn")]
        public string getAllPermissionsByUser(string p_accessToken) {
            object[] results = this.Invoke("getAllPermissionsByUser", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllPermissionsByUserAsync(string p_accessToken) {
            this.getAllPermissionsByUserAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllPermissionsByUserAsync(string p_accessToken, object userState) {
            if ((this.getAllPermissionsByUserOperationCompleted == null)) {
                this.getAllPermissionsByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPermissionsByUserOperationCompleted);
            }
            this.InvokeAsync("getAllPermissionsByUser", new object[] {
                        p_accessToken}, this.getAllPermissionsByUserOperationCompleted, userState);
        }
        
        private void OngetAllPermissionsByUserOperationCompleted(object arg) {
            if ((this.getAllPermissionsByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPermissionsByUserCompleted(this, new getAllPermissionsByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAttributesByJobIdReturn")]
        public string getAttributesByJobId(string p_accessToken, long p_jobId) {
            object[] results = this.Invoke("getAttributesByJobId", new object[] {
                        p_accessToken,
                        p_jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAttributesByJobIdAsync(string p_accessToken, long p_jobId) {
            this.getAttributesByJobIdAsync(p_accessToken, p_jobId, null);
        }
        
        /// <remarks/>
        public void getAttributesByJobIdAsync(string p_accessToken, long p_jobId, object userState) {
            if ((this.getAttributesByJobIdOperationCompleted == null)) {
                this.getAttributesByJobIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttributesByJobIdOperationCompleted);
            }
            this.InvokeAsync("getAttributesByJobId", new object[] {
                        p_accessToken,
                        p_jobId}, this.getAttributesByJobIdOperationCompleted, userState);
        }
        
        private void OngetAttributesByJobIdOperationCompleted(object arg) {
            if ((this.getAttributesByJobIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttributesByJobIdCompleted(this, new getAttributesByJobIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="getAttributesByJobId1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAttributesByJobIdReturn")]
        public string getAttributesByJobId1(string p_accessToken, long p_jobId) {
            object[] results = this.Invoke("getAttributesByJobId1", new object[] {
                        p_accessToken,
                        p_jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAttributesByJobId1Async(string p_accessToken, long p_jobId) {
            this.getAttributesByJobId1Async(p_accessToken, p_jobId, null);
        }
        
        /// <remarks/>
        public void getAttributesByJobId1Async(string p_accessToken, long p_jobId, object userState) {
            if ((this.getAttributesByJobId1OperationCompleted == null)) {
                this.getAttributesByJobId1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttributesByJobId1OperationCompleted);
            }
            this.InvokeAsync("getAttributesByJobId1", new object[] {
                        p_accessToken,
                        p_jobId}, this.getAttributesByJobId1OperationCompleted, userState);
        }
        
        private void OngetAttributesByJobId1OperationCompleted(object arg) {
            if ((this.getAttributesByJobId1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttributesByJobId1Completed(this, new getAttributesByJobId1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAttributesByProjectIdReturn")]
        public string getAttributesByProjectId(string p_accessToken, long p_projectId) {
            object[] results = this.Invoke("getAttributesByProjectId", new object[] {
                        p_accessToken,
                        p_projectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAttributesByProjectIdAsync(string p_accessToken, long p_projectId) {
            this.getAttributesByProjectIdAsync(p_accessToken, p_projectId, null);
        }
        
        /// <remarks/>
        public void getAttributesByProjectIdAsync(string p_accessToken, long p_projectId, object userState) {
            if ((this.getAttributesByProjectIdOperationCompleted == null)) {
                this.getAttributesByProjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttributesByProjectIdOperationCompleted);
            }
            this.InvokeAsync("getAttributesByProjectId", new object[] {
                        p_accessToken,
                        p_projectId}, this.getAttributesByProjectIdOperationCompleted, userState);
        }
        
        private void OngetAttributesByProjectIdOperationCompleted(object arg) {
            if ((this.getAttributesByProjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttributesByProjectIdCompleted(this, new getAttributesByProjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectIdByFileProfileIdReturn")]
        public long getProjectIdByFileProfileId(string p_accessToken, long p_fileProfileId) {
            object[] results = this.Invoke("getProjectIdByFileProfileId", new object[] {
                        p_accessToken,
                        p_fileProfileId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getProjectIdByFileProfileIdAsync(string p_accessToken, long p_fileProfileId) {
            this.getProjectIdByFileProfileIdAsync(p_accessToken, p_fileProfileId, null);
        }
        
        /// <remarks/>
        public void getProjectIdByFileProfileIdAsync(string p_accessToken, long p_fileProfileId, object userState) {
            if ((this.getProjectIdByFileProfileIdOperationCompleted == null)) {
                this.getProjectIdByFileProfileIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectIdByFileProfileIdOperationCompleted);
            }
            this.InvokeAsync("getProjectIdByFileProfileId", new object[] {
                        p_accessToken,
                        p_fileProfileId}, this.getProjectIdByFileProfileIdOperationCompleted, userState);
        }
        
        private void OngetProjectIdByFileProfileIdOperationCompleted(object arg) {
            if ((this.getProjectIdByFileProfileIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectIdByFileProfileIdCompleted(this, new getProjectIdByFileProfileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="getProjectIdByFileProfileId1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectIdByFileProfileIdReturn")]
        public long getProjectIdByFileProfileId1(string p_accessToken, long p_fileProfileId) {
            object[] results = this.Invoke("getProjectIdByFileProfileId1", new object[] {
                        p_accessToken,
                        p_fileProfileId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getProjectIdByFileProfileId1Async(string p_accessToken, long p_fileProfileId) {
            this.getProjectIdByFileProfileId1Async(p_accessToken, p_fileProfileId, null);
        }
        
        /// <remarks/>
        public void getProjectIdByFileProfileId1Async(string p_accessToken, long p_fileProfileId, object userState) {
            if ((this.getProjectIdByFileProfileId1OperationCompleted == null)) {
                this.getProjectIdByFileProfileId1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectIdByFileProfileId1OperationCompleted);
            }
            this.InvokeAsync("getProjectIdByFileProfileId1", new object[] {
                        p_accessToken,
                        p_fileProfileId}, this.getProjectIdByFileProfileId1OperationCompleted, userState);
        }
        
        private void OngetProjectIdByFileProfileId1OperationCompleted(object arg) {
            if ((this.getProjectIdByFileProfileId1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectIdByFileProfileId1Completed(this, new getProjectIdByFileProfileId1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void uploadAttributeFiles(string p_accessToken, string jobName, string attInternalName, string fileName, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] bytes) {
            this.Invoke("uploadAttributeFiles", new object[] {
                        p_accessToken,
                        jobName,
                        attInternalName,
                        fileName,
                        bytes});
        }
        
        /// <remarks/>
        public void uploadAttributeFilesAsync(string p_accessToken, string jobName, string attInternalName, string fileName, byte[] bytes) {
            this.uploadAttributeFilesAsync(p_accessToken, jobName, attInternalName, fileName, bytes, null);
        }
        
        /// <remarks/>
        public void uploadAttributeFilesAsync(string p_accessToken, string jobName, string attInternalName, string fileName, byte[] bytes, object userState) {
            if ((this.uploadAttributeFilesOperationCompleted == null)) {
                this.uploadAttributeFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadAttributeFilesOperationCompleted);
            }
            this.InvokeAsync("uploadAttributeFiles", new object[] {
                        p_accessToken,
                        jobName,
                        attInternalName,
                        fileName,
                        bytes}, this.uploadAttributeFilesOperationCompleted, userState);
        }
        
        private void OnuploadAttributeFilesOperationCompleted(object arg) {
            if ((this.uploadAttributeFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadAttributeFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("uploadCommentReferenceFilesReturn")]
        public string uploadCommentReferenceFiles(Map p_args) {
            object[] results = this.Invoke("uploadCommentReferenceFiles", new object[] {
                        p_args});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadCommentReferenceFilesAsync(Map p_args) {
            this.uploadCommentReferenceFilesAsync(p_args, null);
        }
        
        /// <remarks/>
        public void uploadCommentReferenceFilesAsync(Map p_args, object userState) {
            if ((this.uploadCommentReferenceFilesOperationCompleted == null)) {
                this.uploadCommentReferenceFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadCommentReferenceFilesOperationCompleted);
            }
            this.InvokeAsync("uploadCommentReferenceFiles", new object[] {
                        p_args}, this.uploadCommentReferenceFilesOperationCompleted, userState);
        }
        
        private void OnuploadCommentReferenceFilesOperationCompleted(object arg) {
            if ((this.uploadCommentReferenceFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadCommentReferenceFilesCompleted(this, new uploadCommentReferenceFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("importOfflineKitFilesReturn")]
        public string importOfflineKitFiles(string p_accessToken, string p_originalTaskId) {
            object[] results = this.Invoke("importOfflineKitFiles", new object[] {
                        p_accessToken,
                        p_originalTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void importOfflineKitFilesAsync(string p_accessToken, string p_originalTaskId) {
            this.importOfflineKitFilesAsync(p_accessToken, p_originalTaskId, null);
        }
        
        /// <remarks/>
        public void importOfflineKitFilesAsync(string p_accessToken, string p_originalTaskId, object userState) {
            if ((this.importOfflineKitFilesOperationCompleted == null)) {
                this.importOfflineKitFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportOfflineKitFilesOperationCompleted);
            }
            this.InvokeAsync("importOfflineKitFiles", new object[] {
                        p_accessToken,
                        p_originalTaskId}, this.importOfflineKitFilesOperationCompleted, userState);
        }
        
        private void OnimportOfflineKitFilesOperationCompleted(object arg) {
            if ((this.importOfflineKitFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importOfflineKitFilesCompleted(this, new importOfflineKitFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getOfflineFileUploadStatusReturn")]
        public string getOfflineFileUploadStatus(string accessToken, string taskId, string filename) {
            object[] results = this.Invoke("getOfflineFileUploadStatus", new object[] {
                        accessToken,
                        taskId,
                        filename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOfflineFileUploadStatusAsync(string accessToken, string taskId, string filename) {
            this.getOfflineFileUploadStatusAsync(accessToken, taskId, filename, null);
        }
        
        /// <remarks/>
        public void getOfflineFileUploadStatusAsync(string accessToken, string taskId, string filename, object userState) {
            if ((this.getOfflineFileUploadStatusOperationCompleted == null)) {
                this.getOfflineFileUploadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOfflineFileUploadStatusOperationCompleted);
            }
            this.InvokeAsync("getOfflineFileUploadStatus", new object[] {
                        accessToken,
                        taskId,
                        filename}, this.getOfflineFileUploadStatusOperationCompleted, userState);
        }
        
        private void OngetOfflineFileUploadStatusOperationCompleted(object arg) {
            if ((this.getOfflineFileUploadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOfflineFileUploadStatusCompleted(this, new getOfflineFileUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("isExistedPermissionReturn")]
        public string isExistedPermission(string p_accessToken, string p_permissionName) {
            object[] results = this.Invoke("isExistedPermission", new object[] {
                        p_accessToken,
                        p_permissionName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isExistedPermissionAsync(string p_accessToken, string p_permissionName) {
            this.isExistedPermissionAsync(p_accessToken, p_permissionName, null);
        }
        
        /// <remarks/>
        public void isExistedPermissionAsync(string p_accessToken, string p_permissionName, object userState) {
            if ((this.isExistedPermissionOperationCompleted == null)) {
                this.isExistedPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisExistedPermissionOperationCompleted);
            }
            this.InvokeAsync("isExistedPermission", new object[] {
                        p_accessToken,
                        p_permissionName}, this.isExistedPermissionOperationCompleted, userState);
        }
        
        private void OnisExistedPermissionOperationCompleted(object arg) {
            if ((this.isExistedPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isExistedPermissionCompleted(this, new isExistedPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchJobIdsPerCompanyReturn")]
        public string fetchJobIdsPerCompany(string p_accessToken) {
            object[] results = this.Invoke("fetchJobIdsPerCompany", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchJobIdsPerCompanyAsync(string p_accessToken) {
            this.fetchJobIdsPerCompanyAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void fetchJobIdsPerCompanyAsync(string p_accessToken, object userState) {
            if ((this.fetchJobIdsPerCompanyOperationCompleted == null)) {
                this.fetchJobIdsPerCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchJobIdsPerCompanyOperationCompleted);
            }
            this.InvokeAsync("fetchJobIdsPerCompany", new object[] {
                        p_accessToken}, this.fetchJobIdsPerCompanyOperationCompleted, userState);
        }
        
        private void OnfetchJobIdsPerCompanyOperationCompleted(object arg) {
            if ((this.fetchJobIdsPerCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchJobIdsPerCompanyCompleted(this, new fetchJobIdsPerCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchJobsByCreatorReturn")]
        public string fetchJobsByCreator(string p_accessToken, string p_creatorUserName, int p_offset, int p_count, bool p_isDescOrder) {
            object[] results = this.Invoke("fetchJobsByCreator", new object[] {
                        p_accessToken,
                        p_creatorUserName,
                        p_offset,
                        p_count,
                        p_isDescOrder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchJobsByCreatorAsync(string p_accessToken, string p_creatorUserName, int p_offset, int p_count, bool p_isDescOrder) {
            this.fetchJobsByCreatorAsync(p_accessToken, p_creatorUserName, p_offset, p_count, p_isDescOrder, null);
        }
        
        /// <remarks/>
        public void fetchJobsByCreatorAsync(string p_accessToken, string p_creatorUserName, int p_offset, int p_count, bool p_isDescOrder, object userState) {
            if ((this.fetchJobsByCreatorOperationCompleted == null)) {
                this.fetchJobsByCreatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchJobsByCreatorOperationCompleted);
            }
            this.InvokeAsync("fetchJobsByCreator", new object[] {
                        p_accessToken,
                        p_creatorUserName,
                        p_offset,
                        p_count,
                        p_isDescOrder}, this.fetchJobsByCreatorOperationCompleted, userState);
        }
        
        private void OnfetchJobsByCreatorOperationCompleted(object arg) {
            if ((this.fetchJobsByCreatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchJobsByCreatorCompleted(this, new fetchJobsByCreatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchJobsPerCompanyReturn")]
        public string fetchJobsPerCompany(string p_accessToken, string[] p_jobIds, bool p_returnSourcePageInfo, bool p_returnWorkflowInfo, bool p_returnJobAttributeInfo) {
            object[] results = this.Invoke("fetchJobsPerCompany", new object[] {
                        p_accessToken,
                        p_jobIds,
                        p_returnSourcePageInfo,
                        p_returnWorkflowInfo,
                        p_returnJobAttributeInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchJobsPerCompanyAsync(string p_accessToken, string[] p_jobIds, bool p_returnSourcePageInfo, bool p_returnWorkflowInfo, bool p_returnJobAttributeInfo) {
            this.fetchJobsPerCompanyAsync(p_accessToken, p_jobIds, p_returnSourcePageInfo, p_returnWorkflowInfo, p_returnJobAttributeInfo, null);
        }
        
        /// <remarks/>
        public void fetchJobsPerCompanyAsync(string p_accessToken, string[] p_jobIds, bool p_returnSourcePageInfo, bool p_returnWorkflowInfo, bool p_returnJobAttributeInfo, object userState) {
            if ((this.fetchJobsPerCompanyOperationCompleted == null)) {
                this.fetchJobsPerCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchJobsPerCompanyOperationCompleted);
            }
            this.InvokeAsync("fetchJobsPerCompany", new object[] {
                        p_accessToken,
                        p_jobIds,
                        p_returnSourcePageInfo,
                        p_returnWorkflowInfo,
                        p_returnJobAttributeInfo}, this.fetchJobsPerCompanyOperationCompleted, userState);
        }
        
        private void OnfetchJobsPerCompanyOperationCompleted(object arg) {
            if ((this.fetchJobsPerCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchJobsPerCompanyCompleted(this, new fetchJobsPerCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="fetchJobsPerCompany1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchJobsPerCompanyReturn")]
        public string fetchJobsPerCompany(string p_accessToken, string[] p_jobIds) {
            object[] results = this.Invoke("fetchJobsPerCompany1", new object[] {
                        p_accessToken,
                        p_jobIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchJobsPerCompany1Async(string p_accessToken, string[] p_jobIds) {
            this.fetchJobsPerCompany1Async(p_accessToken, p_jobIds, null);
        }
        
        /// <remarks/>
        public void fetchJobsPerCompany1Async(string p_accessToken, string[] p_jobIds, object userState) {
            if ((this.fetchJobsPerCompany1OperationCompleted == null)) {
                this.fetchJobsPerCompany1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchJobsPerCompany1OperationCompleted);
            }
            this.InvokeAsync("fetchJobsPerCompany1", new object[] {
                        p_accessToken,
                        p_jobIds}, this.fetchJobsPerCompany1OperationCompleted, userState);
        }
        
        private void OnfetchJobsPerCompany1OperationCompleted(object arg) {
            if ((this.fetchJobsPerCompany1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchJobsPerCompany1Completed(this, new fetchJobsPerCompany1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="fetchJobsPerCompany2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchJobsPerCompanyReturn")]
        public string fetchJobsPerCompany(string p_accessToken) {
            object[] results = this.Invoke("fetchJobsPerCompany2", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchJobsPerCompany2Async(string p_accessToken) {
            this.fetchJobsPerCompany2Async(p_accessToken, null);
        }
        
        /// <remarks/>
        public void fetchJobsPerCompany2Async(string p_accessToken, object userState) {
            if ((this.fetchJobsPerCompany2OperationCompleted == null)) {
                this.fetchJobsPerCompany2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchJobsPerCompany2OperationCompleted);
            }
            this.InvokeAsync("fetchJobsPerCompany2", new object[] {
                        p_accessToken}, this.fetchJobsPerCompany2OperationCompleted, userState);
        }
        
        private void OnfetchJobsPerCompany2OperationCompleted(object arg) {
            if ((this.fetchJobsPerCompany2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchJobsPerCompany2Completed(this, new fetchJobsPerCompany2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchWorkflowRelevantInfoReturn")]
        public string fetchWorkflowRelevantInfo(string p_accessToken, string p_workflowId) {
            object[] results = this.Invoke("fetchWorkflowRelevantInfo", new object[] {
                        p_accessToken,
                        p_workflowId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchWorkflowRelevantInfoAsync(string p_accessToken, string p_workflowId) {
            this.fetchWorkflowRelevantInfoAsync(p_accessToken, p_workflowId, null);
        }
        
        /// <remarks/>
        public void fetchWorkflowRelevantInfoAsync(string p_accessToken, string p_workflowId, object userState) {
            if ((this.fetchWorkflowRelevantInfoOperationCompleted == null)) {
                this.fetchWorkflowRelevantInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchWorkflowRelevantInfoOperationCompleted);
            }
            this.InvokeAsync("fetchWorkflowRelevantInfo", new object[] {
                        p_accessToken,
                        p_workflowId}, this.fetchWorkflowRelevantInfoOperationCompleted, userState);
        }
        
        private void OnfetchWorkflowRelevantInfoOperationCompleted(object arg) {
            if ((this.fetchWorkflowRelevantInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchWorkflowRelevantInfoCompleted(this, new fetchWorkflowRelevantInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchWorkflowRelevantInfoByJobsReturn")]
        public string fetchWorkflowRelevantInfoByJobs(string p_accessToken, string jobIds) {
            object[] results = this.Invoke("fetchWorkflowRelevantInfoByJobs", new object[] {
                        p_accessToken,
                        jobIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchWorkflowRelevantInfoByJobsAsync(string p_accessToken, string jobIds) {
            this.fetchWorkflowRelevantInfoByJobsAsync(p_accessToken, jobIds, null);
        }
        
        /// <remarks/>
        public void fetchWorkflowRelevantInfoByJobsAsync(string p_accessToken, string jobIds, object userState) {
            if ((this.fetchWorkflowRelevantInfoByJobsOperationCompleted == null)) {
                this.fetchWorkflowRelevantInfoByJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchWorkflowRelevantInfoByJobsOperationCompleted);
            }
            this.InvokeAsync("fetchWorkflowRelevantInfoByJobs", new object[] {
                        p_accessToken,
                        jobIds}, this.fetchWorkflowRelevantInfoByJobsOperationCompleted, userState);
        }
        
        private void OnfetchWorkflowRelevantInfoByJobsOperationCompleted(object arg) {
            if ((this.fetchWorkflowRelevantInfoByJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchWorkflowRelevantInfoByJobsCompleted(this, new fetchWorkflowRelevantInfoByJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchFileForPreviewReturn")]
        public string fetchFileForPreview(string p_accessToken, string p_jobId, string p_targetLocaleId, string p_sourcePageId) {
            object[] results = this.Invoke("fetchFileForPreview", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_targetLocaleId,
                        p_sourcePageId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchFileForPreviewAsync(string p_accessToken, string p_jobId, string p_targetLocaleId, string p_sourcePageId) {
            this.fetchFileForPreviewAsync(p_accessToken, p_jobId, p_targetLocaleId, p_sourcePageId, null);
        }
        
        /// <remarks/>
        public void fetchFileForPreviewAsync(string p_accessToken, string p_jobId, string p_targetLocaleId, string p_sourcePageId, object userState) {
            if ((this.fetchFileForPreviewOperationCompleted == null)) {
                this.fetchFileForPreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchFileForPreviewOperationCompleted);
            }
            this.InvokeAsync("fetchFileForPreview", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_targetLocaleId,
                        p_sourcePageId}, this.fetchFileForPreviewOperationCompleted, userState);
        }
        
        private void OnfetchFileForPreviewOperationCompleted(object arg) {
            if ((this.fetchFileForPreviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchFileForPreviewCompleted(this, new fetchFileForPreviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("jobsWorkflowCanBeAddedReturn")]
        public string jobsWorkflowCanBeAdded(string p_accessToken, long p_jobId) {
            object[] results = this.Invoke("jobsWorkflowCanBeAdded", new object[] {
                        p_accessToken,
                        p_jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void jobsWorkflowCanBeAddedAsync(string p_accessToken, long p_jobId) {
            this.jobsWorkflowCanBeAddedAsync(p_accessToken, p_jobId, null);
        }
        
        /// <remarks/>
        public void jobsWorkflowCanBeAddedAsync(string p_accessToken, long p_jobId, object userState) {
            if ((this.jobsWorkflowCanBeAddedOperationCompleted == null)) {
                this.jobsWorkflowCanBeAddedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnjobsWorkflowCanBeAddedOperationCompleted);
            }
            this.InvokeAsync("jobsWorkflowCanBeAdded", new object[] {
                        p_accessToken,
                        p_jobId}, this.jobsWorkflowCanBeAddedOperationCompleted, userState);
        }
        
        private void OnjobsWorkflowCanBeAddedOperationCompleted(object arg) {
            if ((this.jobsWorkflowCanBeAddedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.jobsWorkflowCanBeAddedCompleted(this, new jobsWorkflowCanBeAddedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getJobsByTimeRangeReturn")]
        public string getJobsByTimeRange(string accessToken, string startTime, long projectId) {
            object[] results = this.Invoke("getJobsByTimeRange", new object[] {
                        accessToken,
                        startTime,
                        projectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJobsByTimeRangeAsync(string accessToken, string startTime, long projectId) {
            this.getJobsByTimeRangeAsync(accessToken, startTime, projectId, null);
        }
        
        /// <remarks/>
        public void getJobsByTimeRangeAsync(string accessToken, string startTime, long projectId, object userState) {
            if ((this.getJobsByTimeRangeOperationCompleted == null)) {
                this.getJobsByTimeRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobsByTimeRangeOperationCompleted);
            }
            this.InvokeAsync("getJobsByTimeRange", new object[] {
                        accessToken,
                        startTime,
                        projectId}, this.getJobsByTimeRangeOperationCompleted, userState);
        }
        
        private void OngetJobsByTimeRangeOperationCompleted(object arg) {
            if ((this.getJobsByTimeRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobsByTimeRangeCompleted(this, new getJobsByTimeRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="getJobsByTimeRange1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getJobsByTimeRangeReturn")]
        public string getJobsByTimeRange(string accessToken, string startTime) {
            object[] results = this.Invoke("getJobsByTimeRange1", new object[] {
                        accessToken,
                        startTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJobsByTimeRange1Async(string accessToken, string startTime) {
            this.getJobsByTimeRange1Async(accessToken, startTime, null);
        }
        
        /// <remarks/>
        public void getJobsByTimeRange1Async(string accessToken, string startTime, object userState) {
            if ((this.getJobsByTimeRange1OperationCompleted == null)) {
                this.getJobsByTimeRange1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobsByTimeRange1OperationCompleted);
            }
            this.InvokeAsync("getJobsByTimeRange1", new object[] {
                        accessToken,
                        startTime}, this.getJobsByTimeRange1OperationCompleted, userState);
        }
        
        private void OngetJobsByTimeRange1OperationCompleted(object arg) {
            if ((this.getJobsByTimeRange1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobsByTimeRange1Completed(this, new getJobsByTimeRange1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllL10NProfilesReturn")]
        public string getAllL10NProfiles(string accessToken) {
            object[] results = this.Invoke("getAllL10NProfiles", new object[] {
                        accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllL10NProfilesAsync(string accessToken) {
            this.getAllL10NProfilesAsync(accessToken, null);
        }
        
        /// <remarks/>
        public void getAllL10NProfilesAsync(string accessToken, object userState) {
            if ((this.getAllL10NProfilesOperationCompleted == null)) {
                this.getAllL10NProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllL10NProfilesOperationCompleted);
            }
            this.InvokeAsync("getAllL10NProfiles", new object[] {
                        accessToken}, this.getAllL10NProfilesOperationCompleted, userState);
        }
        
        private void OngetAllL10NProfilesOperationCompleted(object arg) {
            if ((this.getAllL10NProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllL10NProfilesCompleted(this, new getAllL10NProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("downloadXliffOfflineFileReturn")]
        public string downloadXliffOfflineFile(string accessToken, string taskId, string lockedSegEditType, bool isIncludeXmlNodeContextInformation) {
            object[] results = this.Invoke("downloadXliffOfflineFile", new object[] {
                        accessToken,
                        taskId,
                        lockedSegEditType,
                        isIncludeXmlNodeContextInformation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void downloadXliffOfflineFileAsync(string accessToken, string taskId, string lockedSegEditType, bool isIncludeXmlNodeContextInformation) {
            this.downloadXliffOfflineFileAsync(accessToken, taskId, lockedSegEditType, isIncludeXmlNodeContextInformation, null);
        }
        
        /// <remarks/>
        public void downloadXliffOfflineFileAsync(string accessToken, string taskId, string lockedSegEditType, bool isIncludeXmlNodeContextInformation, object userState) {
            if ((this.downloadXliffOfflineFileOperationCompleted == null)) {
                this.downloadXliffOfflineFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadXliffOfflineFileOperationCompleted);
            }
            this.InvokeAsync("downloadXliffOfflineFile", new object[] {
                        accessToken,
                        taskId,
                        lockedSegEditType,
                        isIncludeXmlNodeContextInformation}, this.downloadXliffOfflineFileOperationCompleted, userState);
        }
        
        private void OndownloadXliffOfflineFileOperationCompleted(object arg) {
            if ((this.downloadXliffOfflineFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.downloadXliffOfflineFileCompleted(this, new downloadXliffOfflineFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="downloadXliffOfflineFile1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("downloadXliffOfflineFileReturn")]
        public string downloadXliffOfflineFile(string accessToken, string taskId) {
            object[] results = this.Invoke("downloadXliffOfflineFile1", new object[] {
                        accessToken,
                        taskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void downloadXliffOfflineFile1Async(string accessToken, string taskId) {
            this.downloadXliffOfflineFile1Async(accessToken, taskId, null);
        }
        
        /// <remarks/>
        public void downloadXliffOfflineFile1Async(string accessToken, string taskId, object userState) {
            if ((this.downloadXliffOfflineFile1OperationCompleted == null)) {
                this.downloadXliffOfflineFile1OperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadXliffOfflineFile1OperationCompleted);
            }
            this.InvokeAsync("downloadXliffOfflineFile1", new object[] {
                        accessToken,
                        taskId}, this.downloadXliffOfflineFile1OperationCompleted, userState);
        }
        
        private void OndownloadXliffOfflineFile1OperationCompleted(object arg) {
            if ((this.downloadXliffOfflineFile1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.downloadXliffOfflineFile1Completed(this, new downloadXliffOfflineFile1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("generateTranslationEditReportReturn")]
        public string generateTranslationEditReport(string p_accessToken, string p_jobId, string p_targetLocale) {
            object[] results = this.Invoke("generateTranslationEditReport", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_targetLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateTranslationEditReportAsync(string p_accessToken, string p_jobId, string p_targetLocale) {
            this.generateTranslationEditReportAsync(p_accessToken, p_jobId, p_targetLocale, null);
        }
        
        /// <remarks/>
        public void generateTranslationEditReportAsync(string p_accessToken, string p_jobId, string p_targetLocale, object userState) {
            if ((this.generateTranslationEditReportOperationCompleted == null)) {
                this.generateTranslationEditReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateTranslationEditReportOperationCompleted);
            }
            this.InvokeAsync("generateTranslationEditReport", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_targetLocale}, this.generateTranslationEditReportOperationCompleted, userState);
        }
        
        private void OngenerateTranslationEditReportOperationCompleted(object arg) {
            if ((this.generateTranslationEditReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateTranslationEditReportCompleted(this, new generateTranslationEditReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("generatePostReviewQAReportReturn")]
        public string generatePostReviewQAReport(string p_accessToken, string p_jobId, string p_targetLocale) {
            object[] results = this.Invoke("generatePostReviewQAReport", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_targetLocale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generatePostReviewQAReportAsync(string p_accessToken, string p_jobId, string p_targetLocale) {
            this.generatePostReviewQAReportAsync(p_accessToken, p_jobId, p_targetLocale, null);
        }
        
        /// <remarks/>
        public void generatePostReviewQAReportAsync(string p_accessToken, string p_jobId, string p_targetLocale, object userState) {
            if ((this.generatePostReviewQAReportOperationCompleted == null)) {
                this.generatePostReviewQAReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePostReviewQAReportOperationCompleted);
            }
            this.InvokeAsync("generatePostReviewQAReport", new object[] {
                        p_accessToken,
                        p_jobId,
                        p_targetLocale}, this.generatePostReviewQAReportOperationCompleted, userState);
        }
        
        private void OngeneratePostReviewQAReportOperationCompleted(object arg) {
            if ((this.generatePostReviewQAReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePostReviewQAReportCompleted(this, new generatePostReviewQAReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("generateCharacterCountReportReturn")]
        public string generateCharacterCountReport(string p_accessToken, string p_jobIds, string p_targetLocales) {
            object[] results = this.Invoke("generateCharacterCountReport", new object[] {
                        p_accessToken,
                        p_jobIds,
                        p_targetLocales});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateCharacterCountReportAsync(string p_accessToken, string p_jobIds, string p_targetLocales) {
            this.generateCharacterCountReportAsync(p_accessToken, p_jobIds, p_targetLocales, null);
        }
        
        /// <remarks/>
        public void generateCharacterCountReportAsync(string p_accessToken, string p_jobIds, string p_targetLocales, object userState) {
            if ((this.generateCharacterCountReportOperationCompleted == null)) {
                this.generateCharacterCountReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateCharacterCountReportOperationCompleted);
            }
            this.InvokeAsync("generateCharacterCountReport", new object[] {
                        p_accessToken,
                        p_jobIds,
                        p_targetLocales}, this.generateCharacterCountReportOperationCompleted, userState);
        }
        
        private void OngenerateCharacterCountReportOperationCompleted(object arg) {
            if ((this.generateCharacterCountReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateCharacterCountReportCompleted(this, new generateCharacterCountReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("generateReviewersCommentReportReturn")]
        public string generateReviewersCommentReport(string p_accessToken, string p_jobIds, string p_targetLocales, bool p_includeCompactTags) {
            object[] results = this.Invoke("generateReviewersCommentReport", new object[] {
                        p_accessToken,
                        p_jobIds,
                        p_targetLocales,
                        p_includeCompactTags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateReviewersCommentReportAsync(string p_accessToken, string p_jobIds, string p_targetLocales, bool p_includeCompactTags) {
            this.generateReviewersCommentReportAsync(p_accessToken, p_jobIds, p_targetLocales, p_includeCompactTags, null);
        }
        
        /// <remarks/>
        public void generateReviewersCommentReportAsync(string p_accessToken, string p_jobIds, string p_targetLocales, bool p_includeCompactTags, object userState) {
            if ((this.generateReviewersCommentReportOperationCompleted == null)) {
                this.generateReviewersCommentReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateReviewersCommentReportOperationCompleted);
            }
            this.InvokeAsync("generateReviewersCommentReport", new object[] {
                        p_accessToken,
                        p_jobIds,
                        p_targetLocales,
                        p_includeCompactTags}, this.generateReviewersCommentReportOperationCompleted, userState);
        }
        
        private void OngenerateReviewersCommentReportOperationCompleted(object arg) {
            if ((this.generateReviewersCommentReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateReviewersCommentReportCompleted(this, new generateReviewersCommentReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("generateDITAQAReportReturn")]
        public string generateDITAQAReport(string p_accessToken, string p_taskId) {
            object[] results = this.Invoke("generateDITAQAReport", new object[] {
                        p_accessToken,
                        p_taskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateDITAQAReportAsync(string p_accessToken, string p_taskId) {
            this.generateDITAQAReportAsync(p_accessToken, p_taskId, null);
        }
        
        /// <remarks/>
        public void generateDITAQAReportAsync(string p_accessToken, string p_taskId, object userState) {
            if ((this.generateDITAQAReportOperationCompleted == null)) {
                this.generateDITAQAReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateDITAQAReportOperationCompleted);
            }
            this.InvokeAsync("generateDITAQAReport", new object[] {
                        p_accessToken,
                        p_taskId}, this.generateDITAQAReportOperationCompleted, userState);
        }
        
        private void OngenerateDITAQAReportOperationCompleted(object arg) {
            if ((this.generateDITAQAReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateDITAQAReportCompleted(this, new generateDITAQAReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("generateQAChecksReportReturn")]
        public string generateQAChecksReport(string p_accessToken, string p_taskId) {
            object[] results = this.Invoke("generateQAChecksReport", new object[] {
                        p_accessToken,
                        p_taskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateQAChecksReportAsync(string p_accessToken, string p_taskId) {
            this.generateQAChecksReportAsync(p_accessToken, p_taskId, null);
        }
        
        /// <remarks/>
        public void generateQAChecksReportAsync(string p_accessToken, string p_taskId, object userState) {
            if ((this.generateQAChecksReportOperationCompleted == null)) {
                this.generateQAChecksReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateQAChecksReportOperationCompleted);
            }
            this.InvokeAsync("generateQAChecksReport", new object[] {
                        p_accessToken,
                        p_taskId}, this.generateQAChecksReportOperationCompleted, userState);
        }
        
        private void OngenerateQAChecksReportOperationCompleted(object arg) {
            if ((this.generateQAChecksReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateQAChecksReportCompleted(this, new generateQAChecksReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("generateQAChecksReportsReturn")]
        public string generateQAChecksReports(string p_accessToken, string jobIds, string workflowIds) {
            object[] results = this.Invoke("generateQAChecksReports", new object[] {
                        p_accessToken,
                        jobIds,
                        workflowIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateQAChecksReportsAsync(string p_accessToken, string jobIds, string workflowIds) {
            this.generateQAChecksReportsAsync(p_accessToken, jobIds, workflowIds, null);
        }
        
        /// <remarks/>
        public void generateQAChecksReportsAsync(string p_accessToken, string jobIds, string workflowIds, object userState) {
            if ((this.generateQAChecksReportsOperationCompleted == null)) {
                this.generateQAChecksReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateQAChecksReportsOperationCompleted);
            }
            this.InvokeAsync("generateQAChecksReports", new object[] {
                        p_accessToken,
                        jobIds,
                        workflowIds}, this.generateQAChecksReportsOperationCompleted, userState);
        }
        
        private void OngenerateQAChecksReportsOperationCompleted(object arg) {
            if ((this.generateQAChecksReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateQAChecksReportsCompleted(this, new generateQAChecksReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getWorkOfflineFilesReturn")]
        public string getWorkOfflineFiles(string p_accessToken, long p_taskId, int p_workOfflineFileType) {
            object[] results = this.Invoke("getWorkOfflineFiles", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_workOfflineFileType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkOfflineFilesAsync(string p_accessToken, long p_taskId, int p_workOfflineFileType) {
            this.getWorkOfflineFilesAsync(p_accessToken, p_taskId, p_workOfflineFileType, null);
        }
        
        /// <remarks/>
        public void getWorkOfflineFilesAsync(string p_accessToken, long p_taskId, int p_workOfflineFileType, object userState) {
            if ((this.getWorkOfflineFilesOperationCompleted == null)) {
                this.getWorkOfflineFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkOfflineFilesOperationCompleted);
            }
            this.InvokeAsync("getWorkOfflineFiles", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_workOfflineFileType}, this.getWorkOfflineFilesOperationCompleted, userState);
        }
        
        private void OngetWorkOfflineFilesOperationCompleted(object arg) {
            if ((this.getWorkOfflineFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkOfflineFilesCompleted(this, new getWorkOfflineFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("uploadWorkOfflineFilesReturn")]
        public string uploadWorkOfflineFiles(string p_accessToken, long p_taskId, int p_workOfflineFileType, string p_fileName, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] bytes) {
            object[] results = this.Invoke("uploadWorkOfflineFiles", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_workOfflineFileType,
                        p_fileName,
                        bytes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadWorkOfflineFilesAsync(string p_accessToken, long p_taskId, int p_workOfflineFileType, string p_fileName, byte[] bytes) {
            this.uploadWorkOfflineFilesAsync(p_accessToken, p_taskId, p_workOfflineFileType, p_fileName, bytes, null);
        }
        
        /// <remarks/>
        public void uploadWorkOfflineFilesAsync(string p_accessToken, long p_taskId, int p_workOfflineFileType, string p_fileName, byte[] bytes, object userState) {
            if ((this.uploadWorkOfflineFilesOperationCompleted == null)) {
                this.uploadWorkOfflineFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadWorkOfflineFilesOperationCompleted);
            }
            this.InvokeAsync("uploadWorkOfflineFiles", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_workOfflineFileType,
                        p_fileName,
                        bytes}, this.uploadWorkOfflineFilesOperationCompleted, userState);
        }
        
        private void OnuploadWorkOfflineFilesOperationCompleted(object arg) {
            if ((this.uploadWorkOfflineFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadWorkOfflineFilesCompleted(this, new uploadWorkOfflineFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("importWorkOfflineFilesReturn")]
        public string importWorkOfflineFiles(string p_accessToken, long p_taskId, string p_identifyKey, int p_workOfflineFileType) {
            object[] results = this.Invoke("importWorkOfflineFiles", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_identifyKey,
                        p_workOfflineFileType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void importWorkOfflineFilesAsync(string p_accessToken, long p_taskId, string p_identifyKey, int p_workOfflineFileType) {
            this.importWorkOfflineFilesAsync(p_accessToken, p_taskId, p_identifyKey, p_workOfflineFileType, null);
        }
        
        /// <remarks/>
        public void importWorkOfflineFilesAsync(string p_accessToken, long p_taskId, string p_identifyKey, int p_workOfflineFileType, object userState) {
            if ((this.importWorkOfflineFilesOperationCompleted == null)) {
                this.importWorkOfflineFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportWorkOfflineFilesOperationCompleted);
            }
            this.InvokeAsync("importWorkOfflineFiles", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_identifyKey,
                        p_workOfflineFileType}, this.importWorkOfflineFilesOperationCompleted, userState);
        }
        
        private void OnimportWorkOfflineFilesOperationCompleted(object arg) {
            if ((this.importWorkOfflineFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importWorkOfflineFilesCompleted(this, new importWorkOfflineFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTmExportStatusReturn")]
        public string getTmExportStatus(string p_accessToken, string p_identifyKey) {
            object[] results = this.Invoke("getTmExportStatus", new object[] {
                        p_accessToken,
                        p_identifyKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTmExportStatusAsync(string p_accessToken, string p_identifyKey) {
            this.getTmExportStatusAsync(p_accessToken, p_identifyKey, null);
        }
        
        /// <remarks/>
        public void getTmExportStatusAsync(string p_accessToken, string p_identifyKey, object userState) {
            if ((this.getTmExportStatusOperationCompleted == null)) {
                this.getTmExportStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTmExportStatusOperationCompleted);
            }
            this.InvokeAsync("getTmExportStatus", new object[] {
                        p_accessToken,
                        p_identifyKey}, this.getTmExportStatusOperationCompleted, userState);
        }
        
        private void OngetTmExportStatusOperationCompleted(object arg) {
            if ((this.getTmExportStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTmExportStatusCompleted(this, new getTmExportStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getInContextReviewLinkReturn")]
        public string getInContextReviewLink(string p_accessToken, string p_taskId) {
            object[] results = this.Invoke("getInContextReviewLink", new object[] {
                        p_accessToken,
                        p_taskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getInContextReviewLinkAsync(string p_accessToken, string p_taskId) {
            this.getInContextReviewLinkAsync(p_accessToken, p_taskId, null);
        }
        
        /// <remarks/>
        public void getInContextReviewLinkAsync(string p_accessToken, string p_taskId, object userState) {
            if ((this.getInContextReviewLinkOperationCompleted == null)) {
                this.getInContextReviewLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInContextReviewLinkOperationCompleted);
            }
            this.InvokeAsync("getInContextReviewLink", new object[] {
                        p_accessToken,
                        p_taskId}, this.getInContextReviewLinkOperationCompleted, userState);
        }
        
        private void OngetInContextReviewLinkOperationCompleted(object arg) {
            if ((this.getInContextReviewLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInContextReviewLinkCompleted(this, new getInContextReviewLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void editEntry(string p_accessToken, string p_tmProfileName, string p_orgSid, string p_newSid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, bool isEscape) {
            this.Invoke("editEntry", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_orgSid,
                        p_newSid,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment,
                        isEscape});
        }
        
        /// <remarks/>
        public void editEntryAsync(string p_accessToken, string p_tmProfileName, string p_orgSid, string p_newSid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, bool isEscape) {
            this.editEntryAsync(p_accessToken, p_tmProfileName, p_orgSid, p_newSid, p_sourceLocale, p_sourceSegment, p_targetLocale, p_targetSegment, isEscape, null);
        }
        
        /// <remarks/>
        public void editEntryAsync(string p_accessToken, string p_tmProfileName, string p_orgSid, string p_newSid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, bool isEscape, object userState) {
            if ((this.editEntryOperationCompleted == null)) {
                this.editEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditEntryOperationCompleted);
            }
            this.InvokeAsync("editEntry", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_orgSid,
                        p_newSid,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment,
                        isEscape}, this.editEntryOperationCompleted, userState);
        }
        
        private void OneditEntryOperationCompleted(object arg) {
            if ((this.editEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="editEntry1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void editEntry(string p_accessToken, string p_tmProfileName, string p_orgSid, string p_newSid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, string escapeString) {
            this.Invoke("editEntry1", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_orgSid,
                        p_newSid,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment,
                        escapeString});
        }
        
        /// <remarks/>
        public void editEntry1Async(string p_accessToken, string p_tmProfileName, string p_orgSid, string p_newSid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, string escapeString) {
            this.editEntry1Async(p_accessToken, p_tmProfileName, p_orgSid, p_newSid, p_sourceLocale, p_sourceSegment, p_targetLocale, p_targetSegment, escapeString, null);
        }
        
        /// <remarks/>
        public void editEntry1Async(string p_accessToken, string p_tmProfileName, string p_orgSid, string p_newSid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, string escapeString, object userState) {
            if ((this.editEntry1OperationCompleted == null)) {
                this.editEntry1OperationCompleted = new System.Threading.SendOrPostCallback(this.OneditEntry1OperationCompleted);
            }
            this.InvokeAsync("editEntry1", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_orgSid,
                        p_newSid,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment,
                        escapeString}, this.editEntry1OperationCompleted, userState);
        }
        
        private void OneditEntry1OperationCompleted(object arg) {
            if ((this.editEntry1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editEntry1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="editEntry2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void editEntry(string p_accessToken, string p_tmProfileName, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment) {
            this.Invoke("editEntry2", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment});
        }
        
        /// <remarks/>
        public void editEntry2Async(string p_accessToken, string p_tmProfileName, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment) {
            this.editEntry2Async(p_accessToken, p_tmProfileName, p_sourceLocale, p_sourceSegment, p_targetLocale, p_targetSegment, null);
        }
        
        /// <remarks/>
        public void editEntry2Async(string p_accessToken, string p_tmProfileName, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, object userState) {
            if ((this.editEntry2OperationCompleted == null)) {
                this.editEntry2OperationCompleted = new System.Threading.SendOrPostCallback(this.OneditEntry2OperationCompleted);
            }
            this.InvokeAsync("editEntry2", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment}, this.editEntry2OperationCompleted, userState);
        }
        
        private void OneditEntry2OperationCompleted(object arg) {
            if ((this.editEntry2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editEntry2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("saveEntryReturn")]
        public string saveEntry(string p_accessToken, string p_tmProfileName, string sid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, bool isEscape) {
            object[] results = this.Invoke("saveEntry", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        sid,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment,
                        isEscape});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveEntryAsync(string p_accessToken, string p_tmProfileName, string sid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, bool isEscape) {
            this.saveEntryAsync(p_accessToken, p_tmProfileName, sid, p_sourceLocale, p_sourceSegment, p_targetLocale, p_targetSegment, isEscape, null);
        }
        
        /// <remarks/>
        public void saveEntryAsync(string p_accessToken, string p_tmProfileName, string sid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, bool isEscape, object userState) {
            if ((this.saveEntryOperationCompleted == null)) {
                this.saveEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveEntryOperationCompleted);
            }
            this.InvokeAsync("saveEntry", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        sid,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment,
                        isEscape}, this.saveEntryOperationCompleted, userState);
        }
        
        private void OnsaveEntryOperationCompleted(object arg) {
            if ((this.saveEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveEntryCompleted(this, new saveEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="saveEntry1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("saveEntryReturn")]
        public string saveEntry(string p_accessToken, string p_tmProfileName, string sid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, string escapeString) {
            object[] results = this.Invoke("saveEntry1", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        sid,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment,
                        escapeString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveEntry1Async(string p_accessToken, string p_tmProfileName, string sid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, string escapeString) {
            this.saveEntry1Async(p_accessToken, p_tmProfileName, sid, p_sourceLocale, p_sourceSegment, p_targetLocale, p_targetSegment, escapeString, null);
        }
        
        /// <remarks/>
        public void saveEntry1Async(string p_accessToken, string p_tmProfileName, string sid, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, string escapeString, object userState) {
            if ((this.saveEntry1OperationCompleted == null)) {
                this.saveEntry1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveEntry1OperationCompleted);
            }
            this.InvokeAsync("saveEntry1", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        sid,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment,
                        escapeString}, this.saveEntry1OperationCompleted, userState);
        }
        
        private void OnsaveEntry1OperationCompleted(object arg) {
            if ((this.saveEntry1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveEntry1Completed(this, new saveEntry1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="saveEntry2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void saveEntry(string p_accessToken, string p_tmProfileName, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment) {
            this.Invoke("saveEntry2", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment});
        }
        
        /// <remarks/>
        public void saveEntry2Async(string p_accessToken, string p_tmProfileName, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment) {
            this.saveEntry2Async(p_accessToken, p_tmProfileName, p_sourceLocale, p_sourceSegment, p_targetLocale, p_targetSegment, null);
        }
        
        /// <remarks/>
        public void saveEntry2Async(string p_accessToken, string p_tmProfileName, string p_sourceLocale, string p_sourceSegment, string p_targetLocale, string p_targetSegment, object userState) {
            if ((this.saveEntry2OperationCompleted == null)) {
                this.saveEntry2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveEntry2OperationCompleted);
            }
            this.InvokeAsync("saveEntry2", new object[] {
                        p_accessToken,
                        p_tmProfileName,
                        p_sourceLocale,
                        p_sourceSegment,
                        p_targetLocale,
                        p_targetSegment}, this.saveEntry2OperationCompleted, userState);
        }
        
        private void OnsaveEntry2OperationCompleted(object arg) {
            if ((this.saveEntry2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveEntry2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void discardJob(string p_accessToken, string p_userIdToDiscardJob, string p_taskId) {
            this.Invoke("discardJob", new object[] {
                        p_accessToken,
                        p_userIdToDiscardJob,
                        p_taskId});
        }
        
        /// <remarks/>
        public void discardJobAsync(string p_accessToken, string p_userIdToDiscardJob, string p_taskId) {
            this.discardJobAsync(p_accessToken, p_userIdToDiscardJob, p_taskId, null);
        }
        
        /// <remarks/>
        public void discardJobAsync(string p_accessToken, string p_userIdToDiscardJob, string p_taskId, object userState) {
            if ((this.discardJobOperationCompleted == null)) {
                this.discardJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OndiscardJobOperationCompleted);
            }
            this.InvokeAsync("discardJob", new object[] {
                        p_accessToken,
                        p_userIdToDiscardJob,
                        p_taskId}, this.discardJobOperationCompleted, userState);
        }
        
        private void OndiscardJobOperationCompleted(object arg) {
            if ((this.discardJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.discardJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("dispatchWorkflowReturn")]
        public string dispatchWorkflow(string p_accessToken, string p_wfIds) {
            object[] results = this.Invoke("dispatchWorkflow", new object[] {
                        p_accessToken,
                        p_wfIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dispatchWorkflowAsync(string p_accessToken, string p_wfIds) {
            this.dispatchWorkflowAsync(p_accessToken, p_wfIds, null);
        }
        
        /// <remarks/>
        public void dispatchWorkflowAsync(string p_accessToken, string p_wfIds, object userState) {
            if ((this.dispatchWorkflowOperationCompleted == null)) {
                this.dispatchWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OndispatchWorkflowOperationCompleted);
            }
            this.InvokeAsync("dispatchWorkflow", new object[] {
                        p_accessToken,
                        p_wfIds}, this.dispatchWorkflowOperationCompleted, userState);
        }
        
        private void OndispatchWorkflowOperationCompleted(object arg) {
            if ((this.dispatchWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dispatchWorkflowCompleted(this, new dispatchWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("completeTaskReturn")]
        public string completeTask(string p_accessToken, string p_taskId, string p_destinationArrow) {
            object[] results = this.Invoke("completeTask", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_destinationArrow});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void completeTaskAsync(string p_accessToken, string p_taskId, string p_destinationArrow) {
            this.completeTaskAsync(p_accessToken, p_taskId, p_destinationArrow, null);
        }
        
        /// <remarks/>
        public void completeTaskAsync(string p_accessToken, string p_taskId, string p_destinationArrow, object userState) {
            if ((this.completeTaskOperationCompleted == null)) {
                this.completeTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OncompleteTaskOperationCompleted);
            }
            this.InvokeAsync("completeTask", new object[] {
                        p_accessToken,
                        p_taskId,
                        p_destinationArrow}, this.completeTaskOperationCompleted, userState);
        }
        
        private void OncompleteTaskOperationCompleted(object arg) {
            if ((this.completeTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.completeTaskCompleted(this, new completeTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllTMProfilesReturn")]
        public string getAllTMProfiles(string p_accessToken) {
            object[] results = this.Invoke("getAllTMProfiles", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllTMProfilesAsync(string p_accessToken) {
            this.getAllTMProfilesAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllTMProfilesAsync(string p_accessToken, object userState) {
            if ((this.getAllTMProfilesOperationCompleted == null)) {
                this.getAllTMProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTMProfilesOperationCompleted);
            }
            this.InvokeAsync("getAllTMProfiles", new object[] {
                        p_accessToken}, this.getAllTMProfilesOperationCompleted, userState);
        }
        
        private void OngetAllTMProfilesOperationCompleted(object arg) {
            if ((this.getAllTMProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTMProfilesCompleted(this, new getAllTMProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getXliffFileProfileReturn")]
        public Map getXliffFileProfile(string p_accessToken) {
            object[] results = this.Invoke("getXliffFileProfile", new object[] {
                        p_accessToken});
            return ((Map)(results[0]));
        }
        
        /// <remarks/>
        public void getXliffFileProfileAsync(string p_accessToken) {
            this.getXliffFileProfileAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getXliffFileProfileAsync(string p_accessToken, object userState) {
            if ((this.getXliffFileProfileOperationCompleted == null)) {
                this.getXliffFileProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXliffFileProfileOperationCompleted);
            }
            this.InvokeAsync("getXliffFileProfile", new object[] {
                        p_accessToken}, this.getXliffFileProfileOperationCompleted, userState);
        }
        
        private void OngetXliffFileProfileOperationCompleted(object arg) {
            if ((this.getXliffFileProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXliffFileProfileCompleted(this, new getXliffFileProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getJobAttributeReturn")]
        public string getJobAttribute(string accessToken, long jobId, string attInternalName) {
            object[] results = this.Invoke("getJobAttribute", new object[] {
                        accessToken,
                        jobId,
                        attInternalName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJobAttributeAsync(string accessToken, long jobId, string attInternalName) {
            this.getJobAttributeAsync(accessToken, jobId, attInternalName, null);
        }
        
        /// <remarks/>
        public void getJobAttributeAsync(string accessToken, long jobId, string attInternalName, object userState) {
            if ((this.getJobAttributeOperationCompleted == null)) {
                this.getJobAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobAttributeOperationCompleted);
            }
            this.InvokeAsync("getJobAttribute", new object[] {
                        accessToken,
                        jobId,
                        attInternalName}, this.getJobAttributeOperationCompleted, userState);
        }
        
        private void OngetJobAttributeOperationCompleted(object arg) {
            if ((this.getJobAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobAttributeCompleted(this, new getJobAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void setJobAttribute(string accessToken, long jobId, string attInternalName, object value) {
            this.Invoke("setJobAttribute", new object[] {
                        accessToken,
                        jobId,
                        attInternalName,
                        value});
        }
        
        /// <remarks/>
        public void setJobAttributeAsync(string accessToken, long jobId, string attInternalName, object value) {
            this.setJobAttributeAsync(accessToken, jobId, attInternalName, value, null);
        }
        
        /// <remarks/>
        public void setJobAttributeAsync(string accessToken, long jobId, string attInternalName, object value, object userState) {
            if ((this.setJobAttributeOperationCompleted == null)) {
                this.setJobAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetJobAttributeOperationCompleted);
            }
            this.InvokeAsync("setJobAttribute", new object[] {
                        accessToken,
                        jobId,
                        attInternalName,
                        value}, this.setJobAttributeOperationCompleted, userState);
        }
        
        private void OnsetJobAttributeOperationCompleted(object arg) {
            if ((this.setJobAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setJobAttributeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUniqueJobNameReturn")]
        public string getUniqueJobName(Map args) {
            object[] results = this.Invoke("getUniqueJobName", new object[] {
                        args});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUniqueJobNameAsync(Map args) {
            this.getUniqueJobNameAsync(args, null);
        }
        
        /// <remarks/>
        public void getUniqueJobNameAsync(Map args, object userState) {
            if ((this.getUniqueJobNameOperationCompleted == null)) {
                this.getUniqueJobNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUniqueJobNameOperationCompleted);
            }
            this.InvokeAsync("getUniqueJobName", new object[] {
                        args}, this.getUniqueJobNameOperationCompleted, userState);
        }
        
        private void OngetUniqueJobNameOperationCompleted(object arg) {
            if ((this.getUniqueJobNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUniqueJobNameCompleted(this, new getUniqueJobNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="getUniqueJobName1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUniqueJobNameReturn")]
        public string getUniqueJobName(string p_accessToken, string p_jobName) {
            object[] results = this.Invoke("getUniqueJobName1", new object[] {
                        p_accessToken,
                        p_jobName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUniqueJobName1Async(string p_accessToken, string p_jobName) {
            this.getUniqueJobName1Async(p_accessToken, p_jobName, null);
        }
        
        /// <remarks/>
        public void getUniqueJobName1Async(string p_accessToken, string p_jobName, object userState) {
            if ((this.getUniqueJobName1OperationCompleted == null)) {
                this.getUniqueJobName1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUniqueJobName1OperationCompleted);
            }
            this.InvokeAsync("getUniqueJobName1", new object[] {
                        p_accessToken,
                        p_jobName}, this.getUniqueJobName1OperationCompleted, userState);
        }
        
        private void OngetUniqueJobName1OperationCompleted(object arg) {
            if ((this.getUniqueJobName1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUniqueJobName1Completed(this, new getUniqueJobName1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        public void createEditionJob(Map args) {
            this.Invoke("createEditionJob", new object[] {
                        args});
        }
        
        /// <remarks/>
        public void createEditionJobAsync(Map args) {
            this.createEditionJobAsync(args, null);
        }
        
        /// <remarks/>
        public void createEditionJobAsync(Map args, object userState) {
            if ((this.createEditionJobOperationCompleted == null)) {
                this.createEditionJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEditionJobOperationCompleted);
            }
            this.InvokeAsync("createEditionJob", new object[] {
                        args}, this.createEditionJobOperationCompleted, userState);
        }
        
        private void OncreateEditionJobOperationCompleted(object arg) {
            if ((this.createEditionJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEditionJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserTimeZoneReturn")]
        public string getUserTimeZone(string p_accessToken, string p_userName) {
            object[] results = this.Invoke("getUserTimeZone", new object[] {
                        p_accessToken,
                        p_userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserTimeZoneAsync(string p_accessToken, string p_userName) {
            this.getUserTimeZoneAsync(p_accessToken, p_userName, null);
        }
        
        /// <remarks/>
        public void getUserTimeZoneAsync(string p_accessToken, string p_userName, object userState) {
            if ((this.getUserTimeZoneOperationCompleted == null)) {
                this.getUserTimeZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserTimeZoneOperationCompleted);
            }
            this.InvokeAsync("getUserTimeZone", new object[] {
                        p_accessToken,
                        p_userName}, this.getUserTimeZoneOperationCompleted, userState);
        }
        
        private void OngetUserTimeZoneOperationCompleted(object arg) {
            if ((this.getUserTimeZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserTimeZoneCompleted(this, new getUserTimeZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllProjectTMsReturn")]
        public string getAllProjectTMs(string p_accessToken) {
            object[] results = this.Invoke("getAllProjectTMs", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllProjectTMsAsync(string p_accessToken) {
            this.getAllProjectTMsAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllProjectTMsAsync(string p_accessToken, object userState) {
            if ((this.getAllProjectTMsOperationCompleted == null)) {
                this.getAllProjectTMsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProjectTMsOperationCompleted);
            }
            this.InvokeAsync("getAllProjectTMs", new object[] {
                        p_accessToken}, this.getAllProjectTMsOperationCompleted, userState);
        }
        
        private void OngetAllProjectTMsOperationCompleted(object arg) {
            if ((this.getAllProjectTMsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProjectTMsCompleted(this, new getAllProjectTMsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllProjectsReturn")]
        public string getAllProjects(string p_accessToken) {
            object[] results = this.Invoke("getAllProjects", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllProjectsAsync(string p_accessToken) {
            this.getAllProjectsAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getAllProjectsAsync(string p_accessToken, object userState) {
            if ((this.getAllProjectsOperationCompleted == null)) {
                this.getAllProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProjectsOperationCompleted);
            }
            this.InvokeAsync("getAllProjects", new object[] {
                        p_accessToken}, this.getAllProjectsOperationCompleted, userState);
        }
        
        private void OngetAllProjectsOperationCompleted(object arg) {
            if ((this.getAllProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProjectsCompleted(this, new getAllProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("generateReviewersCommentSimplifiedReportReturn")]
        public string generateReviewersCommentSimplifiedReport(string p_accessToken, string p_jobIds, string p_targetLocales, bool p_includeCompactTags) {
            object[] results = this.Invoke("generateReviewersCommentSimplifiedReport", new object[] {
                        p_accessToken,
                        p_jobIds,
                        p_targetLocales,
                        p_includeCompactTags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateReviewersCommentSimplifiedReportAsync(string p_accessToken, string p_jobIds, string p_targetLocales, bool p_includeCompactTags) {
            this.generateReviewersCommentSimplifiedReportAsync(p_accessToken, p_jobIds, p_targetLocales, p_includeCompactTags, null);
        }
        
        /// <remarks/>
        public void generateReviewersCommentSimplifiedReportAsync(string p_accessToken, string p_jobIds, string p_targetLocales, bool p_includeCompactTags, object userState) {
            if ((this.generateReviewersCommentSimplifiedReportOperationCompleted == null)) {
                this.generateReviewersCommentSimplifiedReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateReviewersCommentSimplifiedReportOperationCompleted);
            }
            this.InvokeAsync("generateReviewersCommentSimplifiedReport", new object[] {
                        p_accessToken,
                        p_jobIds,
                        p_targetLocales,
                        p_includeCompactTags}, this.generateReviewersCommentSimplifiedReportOperationCompleted, userState);
        }
        
        private void OngenerateReviewersCommentSimplifiedReportOperationCompleted(object arg) {
            if ((this.generateReviewersCommentSimplifiedReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateReviewersCommentSimplifiedReportCompleted(this, new generateReviewersCommentSimplifiedReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.globalsight.com/webservices/", ResponseNamespace="http://www.globalsight.com/webservices/")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUsernameFromSessionReturn")]
        public string getUsernameFromSession(string p_accessToken) {
            object[] results = this.Invoke("getUsernameFromSession", new object[] {
                        p_accessToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUsernameFromSessionAsync(string p_accessToken) {
            this.getUsernameFromSessionAsync(p_accessToken, null);
        }
        
        /// <remarks/>
        public void getUsernameFromSessionAsync(string p_accessToken, object userState) {
            if ((this.getUsernameFromSessionOperationCompleted == null)) {
                this.getUsernameFromSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsernameFromSessionOperationCompleted);
            }
            this.InvokeAsync("getUsernameFromSession", new object[] {
                        p_accessToken}, this.getUsernameFromSessionOperationCompleted, userState);
        }
        
        private void OngetUsernameFromSessionOperationCompleted(object arg) {
            if ((this.getUsernameFromSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsernameFromSessionCompleted(this, new getUsernameFromSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.globalsight.com/webservices/")]
    public partial class WebServiceException {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class Map {
        
        private mapItem[] itemField;
        
        /// <remarks/>
        public mapItem[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class mapItem {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void searchEntriesCompletedEventHandler(object sender, searchEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void searchEntries1CompletedEventHandler(object sender, searchEntries1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchEntries1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchEntries1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void searchEntries2CompletedEventHandler(object sender, searchEntries2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchEntries2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchEntries2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getConnectionCompletedEventHandler(object sender, getConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void addCommentCompletedEventHandler(object sender, addCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllUsersCompletedEventHandler(object sender, getAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getStatusCompletedEventHandler(object sender, getStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getJobStatusCompletedEventHandler(object sender, getJobStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cancelJobByIdCompletedEventHandler(object sender, cancelJobByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelJobByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelJobByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cancelJobsCompletedEventHandler(object sender, cancelJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void exportWorkflowCompletedEventHandler(object sender, exportWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void exportJobCompletedEventHandler(object sender, exportJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getTasksInJobCompletedEventHandler(object sender, getTasksInJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTasksInJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTasksInJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getTasksInJobsCompletedEventHandler(object sender, getTasksInJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTasksInJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTasksInJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void passDCTMAccountCompletedEventHandler(object sender, passDCTMAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class passDCTMAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal passDCTMAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getGSVersionCompletedEventHandler(object sender, getGSVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGSVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGSVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteSegmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteSegment1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteSegment2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllTermbasesCompletedEventHandler(object sender, getAllTermbasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTermbasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTermbasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void saveTBEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void searchTBEntriesCompletedEventHandler(object sender, searchTBEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTBEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTBEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void editTBEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteTBEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getFirstTuCompletedEventHandler(object sender, getFirstTuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFirstTuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFirstTuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void nextTusCompletedEventHandler(object sender, nextTusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nextTusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nextTusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void nextTus1CompletedEventHandler(object sender, nextTus1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nextTus1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nextTus1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void editTuCompletedEventHandler(object sender, editTuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void editTu1CompletedEventHandler(object sender, editTu1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTu1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTu1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getSourceLocalesCompletedEventHandler(object sender, getSourceLocalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourceLocalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourceLocalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getPriorityByIDCompletedEventHandler(object sender, getPriorityByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPriorityByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPriorityByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchCompanyInfoCompletedEventHandler(object sender, fetchCompanyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchCompanyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchCompanyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchJobsByRangeCompletedEventHandler(object sender, fetchJobsByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchJobsByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchJobsByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchJobsByStateCompletedEventHandler(object sender, fetchJobsByStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchJobsByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchJobsByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCommentFilesCompletedEventHandler(object sender, getCommentFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommentFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommentFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadTmxFileCompletedEventHandler(object sender, uploadTmxFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadTmxFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadTmxFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void importTmxFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void jobsSkipActivityCompletedEventHandler(object sender, jobsSkipActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class jobsSkipActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal jobsSkipActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void taskReassignCompletedEventHandler(object sender, taskReassignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class taskReassignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal taskReassignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void jobsAddLanguagesCompletedEventHandler(object sender, jobsAddLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class jobsAddLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal jobsAddLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getWorkflowPathCompletedEventHandler(object sender, getWorkflowPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createJobGroupCompletedEventHandler(object sender, createJobGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createJobGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createJobGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void addJobToGroupCompletedEventHandler(object sender, addJobToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addJobToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addJobToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void exportTMCompletedEventHandler(object sender, exportTMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportTMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportTMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void tmFullTextSearchCompletedEventHandler(object sender, tmFullTextSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tmFullTextSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tmFullTextSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCountsByJobStateCompletedEventHandler(object sender, getCountsByJobStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountsByJobStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountsByJobStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getServerVersionCompletedEventHandler(object sender, getServerVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cancelJobCompletedEventHandler(object sender, cancelJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void archiveJobCompletedEventHandler(object sender, archiveJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class archiveJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal archiveJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadFile1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadFile2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void helloWorldCompletedEventHandler(object sender, helloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class helloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal helloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createJob1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createJob2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getTargetLocalesCompletedEventHandler(object sender, getTargetLocalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTargetLocalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTargetLocalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getFileProfileInformationCompletedEventHandler(object sender, getFileProfileInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFileProfileInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFileProfileInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllActivityTypesCompletedEventHandler(object sender, getAllActivityTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllActivityTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllActivityTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllLocalePairsCompletedEventHandler(object sender, getAllLocalePairsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllLocalePairsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllLocalePairsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllProjectsByUserCompletedEventHandler(object sender, getAllProjectsByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProjectsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProjectsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createJobOnInitialCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadFileForInitialCompletedEventHandler(object sender, uploadFileForInitialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadFileForInitialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadFileForInitialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getJobAndWorkflowInfoCompletedEventHandler(object sender, getJobAndWorkflowInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobAndWorkflowInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobAndWorkflowInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void acceptTaskCompletedEventHandler(object sender, acceptTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acceptTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acceptTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void rejectTaskCompletedEventHandler(object sender, rejectTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rejectTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rejectTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createUserCompletedEventHandler(object sender, createUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void modifyUserCompletedEventHandler(object sender, modifyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void addJobCommentCompletedEventHandler(object sender, addJobCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addJobCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addJobCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void isSupportCurrentLocalePairCompletedEventHandler(object sender, isSupportCurrentLocalePairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isSupportCurrentLocalePairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isSupportCurrentLocalePairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadOriginalSourceFileCompletedEventHandler(object sender, uploadOriginalSourceFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadOriginalSourceFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadOriginalSourceFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void sendSegmentCommentBackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadEditionFileBackCompletedEventHandler(object sender, uploadEditionFileBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadEditionFileBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadEditionFileBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void importOfflineTargetFilesCompletedEventHandler(object sender, importOfflineTargetFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importOfflineTargetFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importOfflineTargetFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getJobExportFilesCompletedEventHandler(object sender, getJobExportFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobExportFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobExportFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cancelWorkflowCompletedEventHandler(object sender, cancelWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void isInstalledCompletedEventHandler(object sender, isInstalledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isInstalledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isInstalledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void updateTaskStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getJobExportWorkflowFilesCompletedEventHandler(object sender, getJobExportWorkflowFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobExportWorkflowFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobExportWorkflowFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getLocalizedDocumentsCompletedEventHandler(object sender, getLocalizedDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLocalizedDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLocalizedDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getLocalizedDocuments1CompletedEventHandler(object sender, getLocalizedDocuments1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLocalizedDocuments1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLocalizedDocuments1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getLocalizedDocuments_oldCompletedEventHandler(object sender, getLocalizedDocuments_oldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLocalizedDocuments_oldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLocalizedDocuments_oldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getImportExportStatusCompletedEventHandler(object sender, getImportExportStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImportExportStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImportExportStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAcceptedTasksInWorkflowCompletedEventHandler(object sender, getAcceptedTasksInWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAcceptedTasksInWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAcceptedTasksInWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCurrentTasksInWorkflowCompletedEventHandler(object sender, getCurrentTasksInWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentTasksInWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentTasksInWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getUserUnavailabilityReportCompletedEventHandler(object sender, getUserUnavailabilityReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserUnavailabilityReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserUnavailabilityReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getFileProfileInfoExCompletedEventHandler(object sender, getFileProfileInfoExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFileProfileInfoExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFileProfileInfoExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createDocumentumJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cancelDocumentumJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getDownloadableJobsCompletedEventHandler(object sender, getDownloadableJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDownloadableJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDownloadableJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void searchEntriesInBatchCompletedEventHandler(object sender, searchEntriesInBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchEntriesInBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchEntriesInBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Map Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Map)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllPermissionsByUserCompletedEventHandler(object sender, getAllPermissionsByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPermissionsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPermissionsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAttributesByJobIdCompletedEventHandler(object sender, getAttributesByJobIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttributesByJobIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttributesByJobIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAttributesByJobId1CompletedEventHandler(object sender, getAttributesByJobId1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttributesByJobId1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttributesByJobId1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAttributesByProjectIdCompletedEventHandler(object sender, getAttributesByProjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttributesByProjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttributesByProjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getProjectIdByFileProfileIdCompletedEventHandler(object sender, getProjectIdByFileProfileIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectIdByFileProfileIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectIdByFileProfileIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getProjectIdByFileProfileId1CompletedEventHandler(object sender, getProjectIdByFileProfileId1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectIdByFileProfileId1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectIdByFileProfileId1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadAttributeFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadCommentReferenceFilesCompletedEventHandler(object sender, uploadCommentReferenceFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadCommentReferenceFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadCommentReferenceFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void importOfflineKitFilesCompletedEventHandler(object sender, importOfflineKitFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importOfflineKitFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importOfflineKitFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getOfflineFileUploadStatusCompletedEventHandler(object sender, getOfflineFileUploadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOfflineFileUploadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOfflineFileUploadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void isExistedPermissionCompletedEventHandler(object sender, isExistedPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isExistedPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isExistedPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchJobIdsPerCompanyCompletedEventHandler(object sender, fetchJobIdsPerCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchJobIdsPerCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchJobIdsPerCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchJobsByCreatorCompletedEventHandler(object sender, fetchJobsByCreatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchJobsByCreatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchJobsByCreatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchJobsPerCompanyCompletedEventHandler(object sender, fetchJobsPerCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchJobsPerCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchJobsPerCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchJobsPerCompany1CompletedEventHandler(object sender, fetchJobsPerCompany1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchJobsPerCompany1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchJobsPerCompany1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchJobsPerCompany2CompletedEventHandler(object sender, fetchJobsPerCompany2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchJobsPerCompany2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchJobsPerCompany2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchWorkflowRelevantInfoCompletedEventHandler(object sender, fetchWorkflowRelevantInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchWorkflowRelevantInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchWorkflowRelevantInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchWorkflowRelevantInfoByJobsCompletedEventHandler(object sender, fetchWorkflowRelevantInfoByJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchWorkflowRelevantInfoByJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchWorkflowRelevantInfoByJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void fetchFileForPreviewCompletedEventHandler(object sender, fetchFileForPreviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchFileForPreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchFileForPreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void jobsWorkflowCanBeAddedCompletedEventHandler(object sender, jobsWorkflowCanBeAddedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class jobsWorkflowCanBeAddedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal jobsWorkflowCanBeAddedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getJobsByTimeRangeCompletedEventHandler(object sender, getJobsByTimeRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobsByTimeRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobsByTimeRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getJobsByTimeRange1CompletedEventHandler(object sender, getJobsByTimeRange1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobsByTimeRange1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobsByTimeRange1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllL10NProfilesCompletedEventHandler(object sender, getAllL10NProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllL10NProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllL10NProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void downloadXliffOfflineFileCompletedEventHandler(object sender, downloadXliffOfflineFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class downloadXliffOfflineFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal downloadXliffOfflineFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void downloadXliffOfflineFile1CompletedEventHandler(object sender, downloadXliffOfflineFile1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class downloadXliffOfflineFile1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal downloadXliffOfflineFile1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generateTranslationEditReportCompletedEventHandler(object sender, generateTranslationEditReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateTranslationEditReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateTranslationEditReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generatePostReviewQAReportCompletedEventHandler(object sender, generatePostReviewQAReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePostReviewQAReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePostReviewQAReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generateCharacterCountReportCompletedEventHandler(object sender, generateCharacterCountReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateCharacterCountReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateCharacterCountReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generateReviewersCommentReportCompletedEventHandler(object sender, generateReviewersCommentReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateReviewersCommentReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateReviewersCommentReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generateDITAQAReportCompletedEventHandler(object sender, generateDITAQAReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateDITAQAReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateDITAQAReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generateQAChecksReportCompletedEventHandler(object sender, generateQAChecksReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateQAChecksReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateQAChecksReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generateQAChecksReportsCompletedEventHandler(object sender, generateQAChecksReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateQAChecksReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateQAChecksReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getWorkOfflineFilesCompletedEventHandler(object sender, getWorkOfflineFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkOfflineFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkOfflineFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void uploadWorkOfflineFilesCompletedEventHandler(object sender, uploadWorkOfflineFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadWorkOfflineFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadWorkOfflineFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void importWorkOfflineFilesCompletedEventHandler(object sender, importWorkOfflineFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importWorkOfflineFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importWorkOfflineFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getTmExportStatusCompletedEventHandler(object sender, getTmExportStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTmExportStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTmExportStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getInContextReviewLinkCompletedEventHandler(object sender, getInContextReviewLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInContextReviewLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInContextReviewLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void editEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void editEntry1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void editEntry2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void saveEntryCompletedEventHandler(object sender, saveEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void saveEntry1CompletedEventHandler(object sender, saveEntry1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveEntry1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveEntry1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void saveEntry2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void discardJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void dispatchWorkflowCompletedEventHandler(object sender, dispatchWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dispatchWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dispatchWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void completeTaskCompletedEventHandler(object sender, completeTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class completeTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal completeTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllTMProfilesCompletedEventHandler(object sender, getAllTMProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTMProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTMProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getXliffFileProfileCompletedEventHandler(object sender, getXliffFileProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXliffFileProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXliffFileProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Map Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Map)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getJobAttributeCompletedEventHandler(object sender, getJobAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void setJobAttributeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getUniqueJobNameCompletedEventHandler(object sender, getUniqueJobNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUniqueJobNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUniqueJobNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getUniqueJobName1CompletedEventHandler(object sender, getUniqueJobName1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUniqueJobName1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUniqueJobName1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createEditionJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getUserTimeZoneCompletedEventHandler(object sender, getUserTimeZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserTimeZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserTimeZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllProjectTMsCompletedEventHandler(object sender, getAllProjectTMsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProjectTMsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProjectTMsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAllProjectsCompletedEventHandler(object sender, getAllProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generateReviewersCommentSimplifiedReportCompletedEventHandler(object sender, generateReviewersCommentSimplifiedReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateReviewersCommentSimplifiedReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateReviewersCommentSimplifiedReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getUsernameFromSessionCompletedEventHandler(object sender, getUsernameFromSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsernameFromSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsernameFromSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591